GAS LISTING /tmp/ccq49vDe.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB40:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   9:src/riscv.cpp **** #include "../h/print.hpp"
  10:src/riscv.cpp **** #include "../lib/mem.h"
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** void Riscv::popSppSpie()
  13:src/riscv.cpp **** {
  12              		.loc 1 13 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  14:src/riscv.cpp ****     Riscv::ms_sstatus(SSTATUS_SPIE);
  20              		.loc 1 14 5
  21              	.LVL0:
  22              	.LBB37:
  23              	.LBB38:
  24              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non-inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
GAS LISTING /tmp/ccq49vDe.s 			page 2


  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
GAS LISTING /tmp/ccq49vDe.s 			page 3


  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  93:src/../h/riscv.hpp ****     return scause;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105:src/../h/riscv.hpp ****     return sepc;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
GAS LISTING /tmp/ccq49vDe.s 			page 4


 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  25              		.loc 2 161 5
  26              		.loc 2 161 68 is_stmt 0
  27 000c 93070002 		li	a5,32
  28              	#APP
  29              	# 161 "src/../h/riscv.hpp" 1
 162              	}
  30              		csrs sstatus, a5
  31              	# 0 "" 2
  32              	.LVL1:
  33              	#NO_APP
  34              	.LBE38:
  35              	.LBE37:
  15:src/riscv.cpp **** 
  16:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  36              		.loc 1 16 5 is_stmt 1
  37              		.loc 1 16 38 is_stmt 0
  38              	#APP
  39              	# 16 "src/riscv.cpp" 1
  17              	    __asm__ volatile("sret");
  40              		csrw sepc, ra
  41              	# 0 "" 2
  42              		.loc 1 17 5 is_stmt 1
  43              		.loc 1 17 29 is_stmt 0
  44              	# 17 "src/riscv.cpp" 1
  18              	}
  45              		sret
  46              	# 0 "" 2
  47              		.loc 1 18 1
  48              	#NO_APP
  49 001c 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccq49vDe.s 			page 5


  50              		.cfi_restore 8
  51              		.cfi_def_cfa 2, 16
  52 0020 13010101 		addi	sp,sp,16
  53              		.cfi_def_cfa_offset 0
  54 0024 67800000 		jr	ra
  55              		.cfi_endproc
  56              	.LFE40:
  58              		.align	2
  59              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  61              	_ZN5Riscv20handleSupervisorTrapEv:
  62              	.LFB41:
  19:src/riscv.cpp **** 
  20:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  21:src/riscv.cpp **** {
  63              		.loc 1 21 1 is_stmt 1
  64              		.cfi_startproc
  65 0028 130101F9 		addi	sp,sp,-112
  66              		.cfi_def_cfa_offset 112
  67 002c 23341106 		sd	ra,104(sp)
  68 0030 23308106 		sd	s0,96(sp)
  69 0034 233C9104 		sd	s1,88(sp)
  70 0038 23382105 		sd	s2,80(sp)
  71              		.cfi_offset 1, -8
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -24
  74              		.cfi_offset 18, -32
  75 003c 13040107 		addi	s0,sp,112
  76              		.cfi_def_cfa 8, 0
  22:src/riscv.cpp **** 
  23:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
  77              		.loc 1 23 5
  78              	.LBB39:
  79              	.LBB40:
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  80              		.loc 2 103 5
 104:src/../h/riscv.hpp ****     return sepc;
  81              		.loc 2 104 5
 104:src/../h/riscv.hpp ****     return sepc;
  82              		.loc 2 104 64 is_stmt 0
  83              	#APP
  84              	# 104 "src/../h/riscv.hpp" 1
  85              		csrr a5, sepc
  86              	# 0 "" 2
  87              	#NO_APP
  88 0044 2330F4FC 		sd	a5,-64(s0)
 105:src/../h/riscv.hpp **** }
  89              		.loc 2 105 5 is_stmt 1
 105:src/../h/riscv.hpp **** }
  90              		.loc 2 105 12 is_stmt 0
  91 0048 833704FC 		ld	a5,-64(s0)
  92              	.LBE40:
  93              	.LBE39:
  94              		.loc 1 23 35
  95 004c 233CF4FC 		sd	a5,-40(s0)
  24:src/riscv.cpp ****     uint64 volatile sstatus= r_sstatus();
  96              		.loc 1 24 5 is_stmt 1
  97              	.LBB41:
GAS LISTING /tmp/ccq49vDe.s 			page 6


  98              	.LBB42:
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile sstatus;
  99              		.loc 2 171 5
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 100              		.loc 2 172 5
 101              		.loc 2 172 76 is_stmt 0
 102              	#APP
 103              	# 172 "src/../h/riscv.hpp" 1
 173              	    return sstatus;
 104              		csrr a5, sstatus
 105              	# 0 "" 2
 106              	#NO_APP
 107 0054 233CF4FA 		sd	a5,-72(s0)
 108              		.loc 2 173 5 is_stmt 1
 109              		.loc 2 173 12 is_stmt 0
 110 0058 833784FB 		ld	a5,-72(s0)
 111              	.LBE42:
 112              	.LBE41:
 113              		.loc 1 24 40
 114 005c 2338F4FC 		sd	a5,-48(s0)
  25:src/riscv.cpp ****     uint64 volatile scause = r_scause();
 115              		.loc 1 25 5 is_stmt 1
 116              	.LBB43:
 117              	.LBB44:
  91:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 118              		.loc 2 91 5
  92:src/../h/riscv.hpp ****     return scause;
 119              		.loc 2 92 5
  92:src/../h/riscv.hpp ****     return scause;
 120              		.loc 2 92 72 is_stmt 0
 121              	#APP
 122              	# 92 "src/../h/riscv.hpp" 1
 123              		csrr a5, scause
 124              	# 0 "" 2
 125              	#NO_APP
 126 0064 2338F4FA 		sd	a5,-80(s0)
  93:src/../h/riscv.hpp **** }
 127              		.loc 2 93 5 is_stmt 1
  93:src/../h/riscv.hpp **** }
 128              		.loc 2 93 12 is_stmt 0
 129 0068 833704FB 		ld	a5,-80(s0)
 130              	.LBE44:
 131              	.LBE43:
 132              		.loc 1 25 39
 133 006c 2334F4FC 		sd	a5,-56(s0)
  26:src/riscv.cpp **** 
  27:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 134              		.loc 1 27 5 is_stmt 1
 135              	.LBB45:
GAS LISTING /tmp/ccq49vDe.s 			page 7


 136              		.loc 1 27 16 is_stmt 0
 137 0070 033784FC 		ld	a4,-56(s0)
 138              		.loc 1 27 40
 139 0074 93078000 		li	a5,8
 140 0078 6304F704 		beq	a4,a5,.L4
 141              		.loc 1 27 50 discriminator 2
 142 007c 033784FC 		ld	a4,-56(s0)
 143              		.loc 1 27 40 discriminator 2
 144 0080 93079000 		li	a5,9
 145 0084 630EF702 		beq	a4,a5,.L4
  28:src/riscv.cpp ****     {
  29:src/riscv.cpp ****         uint64  volatile CODE;
  30:src/riscv.cpp ****         uint64  volatile arg1;
  31:src/riscv.cpp ****         uint64  volatile arg2;
  32:src/riscv.cpp ****         uint64  volatile arg3;
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r" (CODE));
  34:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));
  35:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));
  36:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));
  37:src/riscv.cpp **** 
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  40:src/riscv.cpp ****         sepc= sepc +4;
  41:src/riscv.cpp ****         uint64 rett;
  42:src/riscv.cpp **** 
  43:src/riscv.cpp ****         thread_t* handle;
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****         if (CODE == SCALL_THREAD_CREATE){
  46:src/riscv.cpp **** 
  47:src/riscv.cpp **** 
  48:src/riscv.cpp ****             handle = (thread_t*) arg1;
  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****             if (handle != nullptr){
  51:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****                 rett=0;
  54:src/riscv.cpp ****             }else {
  55:src/riscv.cpp ****                 rett=-1;
  56:src/riscv.cpp ****             }
  57:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
  58:src/riscv.cpp **** 
  59:src/riscv.cpp **** 
  60:src/riscv.cpp **** 
  61:src/riscv.cpp ****         }else if (CODE == SCALL_THREAD_DISPATCH){
  62:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  63:src/riscv.cpp ****             TCB::dispatch();
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****         }else if (CODE==MEM_ALLOC){
  66:src/riscv.cpp ****             void* re = __mem_alloc(arg1);
  67:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(re));
  68:src/riscv.cpp **** 
  69:src/riscv.cpp ****         }else if (CODE==MEM_FREE){
  70:src/riscv.cpp ****             void* tmp = (void*) arg1;
  71:src/riscv.cpp ****             rett = __mem_free(tmp);
  72:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
  73:src/riscv.cpp **** 
  74:src/riscv.cpp ****         }else if (CODE==SCALL_THREAD_EXIT){
GAS LISTING /tmp/ccq49vDe.s 			page 8


  75:src/riscv.cpp ****             TCB::running->setFinished(true);
  76:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  77:src/riscv.cpp ****             TCB::dispatch();
  78:src/riscv.cpp **** 
  79:src/riscv.cpp ****         }else if (CODE== SCALL_THREAD_JOIN){
  80:src/riscv.cpp ****             TCB* p= TCB::running;
  81:src/riscv.cpp ****             TCB* target = (TCB*) arg1;
  82:src/riscv.cpp ****             bool l= p->isFinished();
  83:src/riscv.cpp ****             TCB::running->setFinished(true);
  84:src/riscv.cpp ****             target->block(p);
  85:src/riscv.cpp ****             TCB::dispatch();
  86:src/riscv.cpp ****             p->setFinished(l);
  87:src/riscv.cpp ****         }
  88:src/riscv.cpp **** 
  89:src/riscv.cpp **** 
  90:src/riscv.cpp **** 
  91:src/riscv.cpp **** 
  92:src/riscv.cpp **** 
  93:src/riscv.cpp ****         /*TCB::timeSliceCounter = 0;
  94:src/riscv.cpp ****         TCB::dispatch();
  95:src/riscv.cpp ****         w_sstatus(sstatus);
  96:src/riscv.cpp ****         w_sepc(sepc);*/
  97:src/riscv.cpp ****     }
  98:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 146              		.loc 1 98 10 is_stmt 1
 147              		.loc 1 98 21 is_stmt 0
 148 0088 033784FC 		ld	a4,-56(s0)
 149              		.loc 1 98 10
 150 008c 9307F0FF 		li	a5,-1
 151 0090 9397F703 		slli	a5,a5,63
 152 0094 93871700 		addi	a5,a5,1
 153 0098 630AF718 		beq	a4,a5,.L19
  99:src/riscv.cpp ****     {
 100:src/riscv.cpp **** 
 101:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 102:src/riscv.cpp ****         TCB::timeSliceCounter++;
 103:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 104:src/riscv.cpp ****         {
 105:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 106:src/riscv.cpp ****             TCB::dispatch();
 107:src/riscv.cpp ****         }
 108:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 109:src/riscv.cpp **** 
 110:src/riscv.cpp ****     }
 111:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 154              		.loc 1 111 10 is_stmt 1
 155              		.loc 1 111 21 is_stmt 0
 156 009c 033784FC 		ld	a4,-56(s0)
 157              		.loc 1 111 10
 158 00a0 9307F0FF 		li	a5,-1
 159 00a4 9397F703 		slli	a5,a5,63
 160 00a8 93879700 		addi	a5,a5,9
 161 00ac 6308F71C 		beq	a4,a5,.L20
 112:src/riscv.cpp ****     {
 113:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 114:src/riscv.cpp ****         console_handler();
 115:src/riscv.cpp ****     }
GAS LISTING /tmp/ccq49vDe.s 			page 9


 116:src/riscv.cpp ****     else
 117:src/riscv.cpp ****     {
 118:src/riscv.cpp ****         __putc('g');
 162              		.loc 1 118 9 is_stmt 1
 163              		.loc 1 118 15 is_stmt 0
 164 00b0 13057006 		li	a0,103
 165 00b4 97000000 		call	__putc@plt
 165      E7800000 
 166              	.LVL2:
 167 00bc 6F00000C 		j	.L9
 168              	.L4:
 169              	.LBB46:
  29:src/riscv.cpp ****         uint64  volatile arg1;
 170              		.loc 1 29 9 is_stmt 1
  30:src/riscv.cpp ****         uint64  volatile arg2;
 171              		.loc 1 30 9
  31:src/riscv.cpp ****         uint64  volatile arg3;
 172              		.loc 1 31 9
  32:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r" (CODE));
 173              		.loc 1 32 9
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));
 174              		.loc 1 33 9
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));
 175              		.loc 1 33 52 is_stmt 0
 176              	#APP
 177              	# 33 "src/riscv.cpp" 1
 178              		mv a5, a0
 179              	# 0 "" 2
 180              	#NO_APP
 181 00c4 2338F4F8 		sd	a5,-112(s0)
  34:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));
 182              		.loc 1 34 9 is_stmt 1
  34:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));
 183              		.loc 1 34 52 is_stmt 0
 184              	#APP
 185              	# 34 "src/riscv.cpp" 1
 186              		mv a5, a1
 187              	# 0 "" 2
 188              	#NO_APP
 189 00cc 233CF4F8 		sd	a5,-104(s0)
  35:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));
 190              		.loc 1 35 9 is_stmt 1
  35:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));
 191              		.loc 1 35 52 is_stmt 0
 192              	#APP
 193              	# 35 "src/riscv.cpp" 1
 194              		mv a5, a2
 195              	# 0 "" 2
 196              	#NO_APP
 197 00d4 2330F4FA 		sd	a5,-96(s0)
  36:src/riscv.cpp **** 
 198              		.loc 1 36 9 is_stmt 1
  36:src/riscv.cpp **** 
 199              		.loc 1 36 52 is_stmt 0
 200              	#APP
 201              	# 36 "src/riscv.cpp" 1
 202              		mv a5, a3
GAS LISTING /tmp/ccq49vDe.s 			page 10


 203              	# 0 "" 2
 204              	#NO_APP
 205 00dc 2334F4FA 		sd	a5,-88(s0)
  40:src/riscv.cpp ****         uint64 rett;
 206              		.loc 1 40 9 is_stmt 1
  40:src/riscv.cpp ****         uint64 rett;
 207              		.loc 1 40 15 is_stmt 0
 208 00e0 833784FD 		ld	a5,-40(s0)
  40:src/riscv.cpp ****         uint64 rett;
 209              		.loc 1 40 20
 210 00e4 93874700 		addi	a5,a5,4
  40:src/riscv.cpp ****         uint64 rett;
 211              		.loc 1 40 13
 212 00e8 233CF4FC 		sd	a5,-40(s0)
  41:src/riscv.cpp **** 
 213              		.loc 1 41 9 is_stmt 1
  43:src/riscv.cpp **** 
 214              		.loc 1 43 9
  45:src/riscv.cpp **** 
 215              		.loc 1 45 9
 216              	.LBB47:
  45:src/riscv.cpp **** 
 217              		.loc 1 45 18 is_stmt 0
 218 00ec 033704F9 		ld	a4,-112(s0)
  45:src/riscv.cpp **** 
 219              		.loc 1 45 9
 220 00f0 93071001 		li	a5,17
 221 00f4 630CF706 		beq	a4,a5,.L21
 222              	.LBE47:
 223              	.LBE46:
 224              	.LBE45:
  61:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 225              		.loc 1 61 15 is_stmt 1
 226              	.LBB94:
 227              	.LBB84:
 228              	.LBB78:
 229              	.LBB48:
  61:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 230              		.loc 1 61 24 is_stmt 0
 231 00f8 033704F9 		ld	a4,-112(s0)
  61:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 232              		.loc 1 61 15
 233 00fc 93073001 		li	a5,19
 234 0100 6300F70C 		beq	a4,a5,.L22
 235              	.LBE48:
 236              	.LBE78:
 237              	.LBE84:
 238              	.LBE94:
  65:src/riscv.cpp ****             void* re = __mem_alloc(arg1);
 239              		.loc 1 65 15 is_stmt 1
 240              	.LBB95:
 241              	.LBB85:
 242              	.LBB79:
 243              	.LBB73:
 244              	.LBB49:
  65:src/riscv.cpp ****             void* re = __mem_alloc(arg1);
 245              		.loc 1 65 23 is_stmt 0
GAS LISTING /tmp/ccq49vDe.s 			page 11


 246 0104 033704F9 		ld	a4,-112(s0)
  65:src/riscv.cpp ****             void* re = __mem_alloc(arg1);
 247              		.loc 1 65 15
 248 0108 93071000 		li	a5,1
 249 010c 6306F70C 		beq	a4,a5,.L23
 250              	.LBE49:
 251              	.LBE73:
 252              	.LBE79:
 253              	.LBE85:
 254              	.LBE95:
  69:src/riscv.cpp ****             void* tmp = (void*) arg1;
 255              		.loc 1 69 15 is_stmt 1
 256              	.LBB96:
 257              	.LBB86:
 258              	.LBB80:
 259              	.LBB74:
 260              	.LBB69:
 261              	.LBB50:
  69:src/riscv.cpp ****             void* tmp = (void*) arg1;
 262              		.loc 1 69 23 is_stmt 0
 263 0110 033704F9 		ld	a4,-112(s0)
  69:src/riscv.cpp ****             void* tmp = (void*) arg1;
 264              		.loc 1 69 15
 265 0114 93072000 		li	a5,2
 266 0118 630AF70C 		beq	a4,a5,.L24
 267              	.LBE50:
 268              	.LBE69:
 269              	.LBE74:
 270              	.LBE80:
 271              	.LBE86:
 272              	.LBE96:
  74:src/riscv.cpp ****             TCB::running->setFinished(true);
 273              		.loc 1 74 15 is_stmt 1
 274              	.LBB97:
 275              	.LBB87:
 276              	.LBB81:
 277              	.LBB75:
 278              	.LBB70:
 279              	.LBB65:
 280              	.LBB51:
  74:src/riscv.cpp ****             TCB::running->setFinished(true);
 281              		.loc 1 74 23 is_stmt 0
 282 011c 033704F9 		ld	a4,-112(s0)
  74:src/riscv.cpp ****             TCB::running->setFinished(true);
 283              		.loc 1 74 15
 284 0120 93072001 		li	a5,18
 285 0124 630EF70C 		beq	a4,a5,.L25
 286              	.LBE51:
 287              	.LBE65:
 288              	.LBE70:
 289              	.LBE75:
 290              	.LBE81:
 291              	.LBE87:
 292              	.LBE97:
  79:src/riscv.cpp ****             TCB* p= TCB::running;
 293              		.loc 1 79 15 is_stmt 1
 294              	.LBB98:
GAS LISTING /tmp/ccq49vDe.s 			page 12


 295              	.LBB88:
 296              	.LBB82:
 297              	.LBB76:
 298              	.LBB71:
 299              	.LBB66:
 300              	.LBB62:
 301              	.LBB52:
  79:src/riscv.cpp ****             TCB* p= TCB::running;
 302              		.loc 1 79 23 is_stmt 0
 303 0128 033704F9 		ld	a4,-112(s0)
  79:src/riscv.cpp ****             TCB* p= TCB::running;
 304              		.loc 1 79 15
 305 012c 93074001 		li	a5,20
 306 0130 6316F704 		bne	a4,a5,.L9
 307              	.LBB53:
  80:src/riscv.cpp ****             TCB* target = (TCB*) arg1;
 308              		.loc 1 80 13 is_stmt 1
  80:src/riscv.cpp ****             TCB* target = (TCB*) arg1;
 309              		.loc 1 80 18 is_stmt 0
 310 0134 97070000 		la	a5,_ZN3TCB7runningE
 310      83B70700 
 311 013c 83B40700 		ld	s1,0(a5)
 312              	.LVL3:
  81:src/riscv.cpp ****             bool l= p->isFinished();
 313              		.loc 1 81 13 is_stmt 1
  81:src/riscv.cpp ****             bool l= p->isFinished();
 314              		.loc 1 81 34 is_stmt 0
 315 0140 033584F9 		ld	a0,-104(s0)
 316              	.LVL4:
  82:src/riscv.cpp ****             TCB::running->setFinished(true);
 317              		.loc 1 82 13 is_stmt 1
 318              	.LBB54:
 319              	.LBB55:
 320              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { if (stack!= nullptr) delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 321              		.loc 3 17 31
 322              		.loc 3 17 38 is_stmt 0
 323 0144 03C90403 		lbu	s2,48(s1)
 324              	.LVL5:
 325              	.LBE55:
 326              	.LBE54:
GAS LISTING /tmp/ccq49vDe.s 			page 13


  83:src/riscv.cpp ****             target->block(p);
 327              		.loc 1 83 13 is_stmt 1
 328              	.LBB56:
 329              	.LBB57:
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
 330              		.loc 3 19 36
 331              		.loc 3 19 45 is_stmt 0
 332 0148 93071000 		li	a5,1
 333 014c 2388F402 		sb	a5,48(s1)
 334              	.LVL6:
 335              	.LBE57:
 336              	.LBE56:
  84:src/riscv.cpp ****             TCB::dispatch();
 337              		.loc 1 84 13 is_stmt 1
  84:src/riscv.cpp ****             TCB::dispatch();
 338              		.loc 1 84 26 is_stmt 0
 339 0150 93850400 		mv	a1,s1
 340 0154 97000000 		call	_ZN3TCB5blockEPS_@plt
 340      E7800000 
 341              	.LVL7:
  85:src/riscv.cpp ****             p->setFinished(l);
 342              		.loc 1 85 13 is_stmt 1
  85:src/riscv.cpp ****             p->setFinished(l);
 343              		.loc 1 85 26 is_stmt 0
 344 015c 97000000 		call	_ZN3TCB8dispatchEv@plt
 344      E7800000 
 345              	.LVL8:
  86:src/riscv.cpp ****         }
 346              		.loc 1 86 13 is_stmt 1
 347              	.LBB58:
 348              	.LBB59:
 349              		.loc 3 19 36
 350              		.loc 3 19 45 is_stmt 0
 351 0164 23882403 		sb	s2,48(s1)
 352              		.loc 3 19 54
 353 0168 6F004001 		j	.L9
 354              	.LVL9:
 355              	.L21:
 356              	.LBE59:
 357              	.LBE58:
 358              	.LBE53:
 359              	.LBE52:
 360              	.LBE62:
 361              	.LBE66:
 362              	.LBE71:
 363              	.LBE76:
  48:src/riscv.cpp **** 
 364              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp **** 
 365              		.loc 1 48 20 is_stmt 0
 366 016c 833484F9 		ld	s1,-104(s0)
 367              	.LVL10:
  50:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 368              		.loc 1 50 13 is_stmt 1
 369 0170 639A0402 		bnez	s1,.L26
  55:src/riscv.cpp ****             }
GAS LISTING /tmp/ccq49vDe.s 			page 14


 370              		.loc 1 55 21 is_stmt 0
 371 0174 9307F0FF 		li	a5,-1
 372              	.L8:
 373              	.LVL11:
  57:src/riscv.cpp **** 
 374              		.loc 1 57 13 is_stmt 1
  57:src/riscv.cpp **** 
 375              		.loc 1 57 62 is_stmt 0
 376              	#APP
 377              	# 57 "src/riscv.cpp" 1
 378              		sd a5, 10*8(fp)
 379              	# 0 "" 2
 380              	.LVL12:
 381              	#NO_APP
 382              	.L9:
 383              	.LBE82:
 384              	.LBE88:
 385              	.LBE98:
 119:src/riscv.cpp ****     }
 120:src/riscv.cpp ****     w_sepc(sepc);
 386              		.loc 1 120 5 is_stmt 1
 387              		.loc 1 120 11 is_stmt 0
 388 017c 833784FD 		ld	a5,-40(s0)
 389              	.LVL13:
 390              	.LBB99:
 391              	.LBB100:
 110:src/../h/riscv.hpp **** }
 392              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 393              		.loc 2 110 65 is_stmt 0
 394              	#APP
 395              	# 110 "src/../h/riscv.hpp" 1
 396              		csrw sepc, a5
 397              	# 0 "" 2
 398              	.LVL14:
 399              	#NO_APP
 400              	.LBE100:
 401              	.LBE99:
 121:src/riscv.cpp ****     w_sstatus(sstatus);
 402              		.loc 1 121 5 is_stmt 1
 403              		.loc 1 121 14 is_stmt 0
 404 0184 833704FD 		ld	a5,-48(s0)
 405              	.LVL15:
 406              	.LBB101:
 407              	.LBB102:
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 408              		.loc 2 178 5 is_stmt 1
 409              		.loc 2 178 77 is_stmt 0
 410              	#APP
 411              	# 178 "src/../h/riscv.hpp" 1
 179              	}
 412              		csrw sstatus, a5
 413              	# 0 "" 2
GAS LISTING /tmp/ccq49vDe.s 			page 15


 414              	.LVL16:
 415              	#NO_APP
 416              	.LBE102:
 417              	.LBE101:
 122:src/riscv.cpp **** }...
 418              		.loc 1 122 1
 419 018c 83308106 		ld	ra,104(sp)
 420              		.cfi_remember_state
 421              		.cfi_restore 1
 422 0190 03340106 		ld	s0,96(sp)
 423              		.cfi_restore 8
 424              		.cfi_def_cfa 2, 112
 425 0194 83348105 		ld	s1,88(sp)
 426              		.cfi_restore 9
 427 0198 03390105 		ld	s2,80(sp)
 428              		.cfi_restore 18
 429 019c 13010107 		addi	sp,sp,112
 430              		.cfi_def_cfa_offset 0
 431 01a0 67800000 		jr	ra
 432              	.LVL17:
 433              	.L26:
 434              		.cfi_restore_state
 435              	.LBB103:
 436              	.LBB89:
 437              	.LBB83:
  51:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 438              		.loc 1 51 17 is_stmt 1
  51:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 439              		.loc 1 51 44 is_stmt 0
 440 01a4 033504FA 		ld	a0,-96(s0)
 441 01a8 833584FA 		ld	a1,-88(s0)
 442 01ac 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
 442      E7800000 
 443              	.LVL18:
  51:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 444              		.loc 1 51 25
 445 01b4 23B0A400 		sd	a0,0(s1)
  53:src/riscv.cpp ****                 rett=0;
 446              		.loc 1 53 17 is_stmt 1
 447              	.LVL19:
  53:src/riscv.cpp ****                 rett=0;
 448              		.loc 1 53 21 is_stmt 0
 449 01b8 93070000 		li	a5,0
 450 01bc 6FF0DFFB 		j	.L8
 451              	.LVL20:
 452              	.L22:
 453              	.LBB77:
  62:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 454              		.loc 1 62 13 is_stmt 1
  62:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 455              		.loc 1 62 34 is_stmt 0
 456 01c0 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 456      83B70700 
 457 01c8 23B00700 		sd	zero,0(a5)
  63:src/riscv.cpp ****             TCB::dispatch();
 458              		.loc 1 63 13 is_stmt 1
  63:src/riscv.cpp ****             TCB::dispatch();
GAS LISTING /tmp/ccq49vDe.s 			page 16


 459              		.loc 1 63 26 is_stmt 0
 460 01cc 97000000 		call	_ZN3TCB8dispatchEv@plt
 460      E7800000 
 461              	.LVL21:
 462 01d4 6FF09FFA 		j	.L9
 463              	.L23:
 464              	.LBB72:
 465              	.LBB67:
  66:src/riscv.cpp ****             void* re = __mem_alloc(arg1);
 466              		.loc 1 66 13 is_stmt 1
  66:src/riscv.cpp ****             void* re = __mem_alloc(arg1);
 467              		.loc 1 66 35 is_stmt 0
 468 01d8 033584F9 		ld	a0,-104(s0)
 469 01dc 97000000 		call	__mem_alloc@plt
 469      E7800000 
 470              	.LVL22:
  67:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(re));
 471              		.loc 1 67 13 is_stmt 1
  67:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(re));
 472              		.loc 1 67 60 is_stmt 0
 473              	#APP
 474              	# 67 "src/riscv.cpp" 1
 475              		sd a0, 10*8(fp)
 476              	# 0 "" 2
 477              	#NO_APP
 478              	.LBE67:
 479 01e8 6FF05FF9 		j	.L9
 480              	.LVL23:
 481              	.L24:
 482              	.LBB68:
 483              	.LBB63:
  70:src/riscv.cpp ****             void* tmp = (void*) arg1;
 484              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp ****             void* tmp = (void*) arg1;
 485              		.loc 1 70 33 is_stmt 0
 486 01ec 033584F9 		ld	a0,-104(s0)
 487              	.LVL24:
  71:src/riscv.cpp ****             rett = __mem_free(tmp);
 488              		.loc 1 71 13 is_stmt 1
  71:src/riscv.cpp ****             rett = __mem_free(tmp);
 489              		.loc 1 71 30 is_stmt 0
 490 01f0 97000000 		call	__mem_free@plt
 490      E7800000 
 491              	.LVL25:
  72:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
 492              		.loc 1 72 13 is_stmt 1
  72:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
 493              		.loc 1 72 62 is_stmt 0
 494              	#APP
 495              	# 72 "src/riscv.cpp" 1
 496              		sd a0, 10*8(fp)
 497              	# 0 "" 2
 498              	#NO_APP
 499              	.LBE63:
 500 01fc 6FF01FF8 		j	.L9
 501              	.LVL26:
 502              	.L25:
GAS LISTING /tmp/ccq49vDe.s 			page 17


 503              	.LBB64:
  75:src/riscv.cpp ****             TCB::running->setFinished(true);
 504              		.loc 1 75 13 is_stmt 1
  75:src/riscv.cpp ****             TCB::running->setFinished(true);
 505              		.loc 1 75 38 is_stmt 0
 506 0200 97070000 		la	a5,_ZN3TCB7runningE
 506      83B70700 
 507 0208 83B70700 		ld	a5,0(a5)
 508              	.LVL27:
 509              	.LBB60:
 510              	.LBB61:
 511              		.loc 3 19 36 is_stmt 1
 512              		.loc 3 19 45 is_stmt 0
 513 020c 13071000 		li	a4,1
 514 0210 2388E702 		sb	a4,48(a5)
 515              	.LVL28:
 516              	.LBE61:
 517              	.LBE60:
  76:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 518              		.loc 1 76 13 is_stmt 1
  76:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 519              		.loc 1 76 34 is_stmt 0
 520 0214 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 520      83B70700 
 521 021c 23B00700 		sd	zero,0(a5)
  77:src/riscv.cpp ****             TCB::dispatch();
 522              		.loc 1 77 13 is_stmt 1
  77:src/riscv.cpp ****             TCB::dispatch();
 523              		.loc 1 77 26 is_stmt 0
 524 0220 97000000 		call	_ZN3TCB8dispatchEv@plt
 524      E7800000 
 525              	.LVL29:
 526 0228 6FF05FF5 		j	.L9
 527              	.L19:
 528              	.LBE64:
 529              	.LBE68:
 530              	.LBE72:
 531              	.LBE77:
 532              	.LBE83:
 533              	.LBE89:
 102:src/riscv.cpp ****         TCB::timeSliceCounter++;
 534              		.loc 1 102 9 is_stmt 1
 102:src/riscv.cpp ****         TCB::timeSliceCounter++;
 535              		.loc 1 102 30 is_stmt 0
 536 022c 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 536      03370700 
 537 0234 83370700 		ld	a5,0(a4)
 538 0238 93871700 		addi	a5,a5,1
 539 023c 2330F700 		sd	a5,0(a4)
 103:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 540              		.loc 1 103 9 is_stmt 1
 103:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 541              		.loc 1 103 26 is_stmt 0
 542 0240 17070000 		la	a4,_ZN3TCB7runningE
 542      03370700 
 543 0248 03370700 		ld	a4,0(a4)
 103:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
GAS LISTING /tmp/ccq49vDe.s 			page 18


 544              		.loc 1 103 37
 545 024c 63060700 		beqz	a4,.L14
 546              	.LVL30:
 547              	.LBB90:
 548              	.LBB91:
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 549              		.loc 3 21 35 is_stmt 1 discriminator 1
 550              		.loc 3 21 42 is_stmt 0 discriminator 1
 551 0250 03378702 		ld	a4,40(a4)
 552              	.LVL31:
 553              	.LBE91:
 554              	.LBE90:
 103:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 555              		.loc 1 103 37 discriminator 1
 556 0254 63F8E700 		bgeu	a5,a4,.L27
 557              	.L14:
 108:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 558              		.loc 1 108 9 is_stmt 1
 559              	.LVL32:
 560              	.LBB92:
 561              	.LBB93:
 144:src/../h/riscv.hpp **** }
 562              		.loc 2 144 5
 144:src/../h/riscv.hpp **** }
 563              		.loc 2 144 64 is_stmt 0
 564 0258 93072000 		li	a5,2
 565              	#APP
 566              	# 144 "src/../h/riscv.hpp" 1
 145:src/../h/riscv.hpp **** 
 567              		csrc sip, a5
 568              	# 0 "" 2
 569              		.loc 2 145 1
 570              	#NO_APP
 571 0260 6FF0DFF1 		j	.L9
 572              	.LVL33:
 573              	.L27:
 574              	.LBE93:
 575              	.LBE92:
 105:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 576              		.loc 1 105 13 is_stmt 1
 105:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 577              		.loc 1 105 34 is_stmt 0
 578 0264 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 578      83B70700 
 579 026c 23B00700 		sd	zero,0(a5)
 106:src/riscv.cpp ****             TCB::dispatch();
 580              		.loc 1 106 13 is_stmt 1
 106:src/riscv.cpp ****             TCB::dispatch();
 581              		.loc 1 106 26 is_stmt 0
 582 0270 97000000 		call	_ZN3TCB8dispatchEv@plt
 582      E7800000 
 583              	.LVL34:
 584 0278 6FF01FFE 		j	.L14
 585              	.L20:
 114:src/riscv.cpp ****         console_handler();
 586              		.loc 1 114 9 is_stmt 1
GAS LISTING /tmp/ccq49vDe.s 			page 19


 114:src/riscv.cpp ****         console_handler();
 587              		.loc 1 114 24 is_stmt 0
 588 027c 97000000 		call	console_handler@plt
 588      E7800000 
 589              	.LVL35:
 590 0284 6FF09FEF 		j	.L9
 591              	.LBE103:
 592              		.cfi_endproc
 593              	.LFE41:
 595              	.Letext0:
 596              		.file 4 "src/../h/../lib/hw.h"
 597              		.file 5 "src/../h/list.hpp"
 598              		.file 6 "src/../h/syscall_c.hpp"
 599              		.file 7 "src/../lib/mem.h"
 600              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/ccq49vDe.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccq49vDe.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccq49vDe.s:13     .text:0000000000000000 .L0 
     /tmp/ccq49vDe.s:14     .text:0000000000000000 .L0 
     /tmp/ccq49vDe.s:15     .text:0000000000000004 .L0 
     /tmp/ccq49vDe.s:17     .text:0000000000000008 .L0 
     /tmp/ccq49vDe.s:19     .text:000000000000000c .L0 
     /tmp/ccq49vDe.s:25     .text:000000000000000c .L0 
     /tmp/ccq49vDe.s:26     .text:000000000000000c .L0 
     /tmp/ccq49vDe.s:27     .text:000000000000000c .L0 
     /tmp/ccq49vDe.s:37     .text:0000000000000014 .L0 
       src/riscv.cpp:16     .text:0000000000000014 .L0 
     /tmp/ccq49vDe.s:43     .text:0000000000000018 .L0 
       src/riscv.cpp:17     .text:0000000000000018 .L0 
     /tmp/ccq49vDe.s:49     .text:000000000000001c .L0 
     /tmp/ccq49vDe.s:50     .text:0000000000000020 .L0 
     /tmp/ccq49vDe.s:51     .text:0000000000000020 .L0 
     /tmp/ccq49vDe.s:53     .text:0000000000000024 .L0 
     /tmp/ccq49vDe.s:55     .text:0000000000000028 .L0 
     /tmp/ccq49vDe.s:61     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccq49vDe.s:64     .text:0000000000000028 .L0 
     /tmp/ccq49vDe.s:65     .text:0000000000000028 .L0 
     /tmp/ccq49vDe.s:66     .text:000000000000002c .L0 
     /tmp/ccq49vDe.s:71     .text:000000000000003c .L0 
     /tmp/ccq49vDe.s:72     .text:000000000000003c .L0 
     /tmp/ccq49vDe.s:73     .text:000000000000003c .L0 
     /tmp/ccq49vDe.s:74     .text:000000000000003c .L0 
     /tmp/ccq49vDe.s:76     .text:0000000000000040 .L0 
     /tmp/ccq49vDe.s:80     .text:0000000000000040 .L0 
     /tmp/ccq49vDe.s:81     .text:0000000000000040 .L0 
     /tmp/ccq49vDe.s:82     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:104    .text:0000000000000040 .L0 
     /tmp/ccq49vDe.s:90     .text:0000000000000048 .L0 
     /tmp/ccq49vDe.s:91     .text:0000000000000048 .L0 
     /tmp/ccq49vDe.s:95     .text:000000000000004c .L0 
     /tmp/ccq49vDe.s:99     .text:0000000000000050 .L0 
     /tmp/ccq49vDe.s:100    .text:0000000000000050 .L0 
     /tmp/ccq49vDe.s:101    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:172    .text:0000000000000050 .L0 
     /tmp/ccq49vDe.s:109    .text:0000000000000058 .L0 
     /tmp/ccq49vDe.s:110    .text:0000000000000058 .L0 
     /tmp/ccq49vDe.s:114    .text:000000000000005c .L0 
     /tmp/ccq49vDe.s:118    .text:0000000000000060 .L0 
     /tmp/ccq49vDe.s:119    .text:0000000000000060 .L0 
     /tmp/ccq49vDe.s:120    .text:0000000000000060 .L0 
  src/../h/riscv.hpp:92     .text:0000000000000060 .L0 
     /tmp/ccq49vDe.s:128    .text:0000000000000068 .L0 
     /tmp/ccq49vDe.s:129    .text:0000000000000068 .L0 
     /tmp/ccq49vDe.s:133    .text:000000000000006c .L0 
     /tmp/ccq49vDe.s:136    .text:0000000000000070 .L0 
     /tmp/ccq49vDe.s:137    .text:0000000000000070 .L0 
     /tmp/ccq49vDe.s:139    .text:0000000000000074 .L0 
     /tmp/ccq49vDe.s:142    .text:000000000000007c .L0 
     /tmp/ccq49vDe.s:144    .text:0000000000000080 .L0 
     /tmp/ccq49vDe.s:147    .text:0000000000000088 .L0 
     /tmp/ccq49vDe.s:148    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccq49vDe.s 			page 21


     /tmp/ccq49vDe.s:150    .text:000000000000008c .L0 
     /tmp/ccq49vDe.s:155    .text:000000000000009c .L0 
     /tmp/ccq49vDe.s:156    .text:000000000000009c .L0 
     /tmp/ccq49vDe.s:158    .text:00000000000000a0 .L0 
     /tmp/ccq49vDe.s:163    .text:00000000000000b0 .L0 
     /tmp/ccq49vDe.s:164    .text:00000000000000b0 .L0 
     /tmp/ccq49vDe.s:171    .text:00000000000000c0 .L0 
     /tmp/ccq49vDe.s:172    .text:00000000000000c0 .L0 
     /tmp/ccq49vDe.s:173    .text:00000000000000c0 .L0 
     /tmp/ccq49vDe.s:174    .text:00000000000000c0 .L0 
     /tmp/ccq49vDe.s:175    .text:00000000000000c0 .L0 
       src/riscv.cpp:33     .text:00000000000000c0 .L0 
     /tmp/ccq49vDe.s:183    .text:00000000000000c8 .L0 
       src/riscv.cpp:34     .text:00000000000000c8 .L0 
     /tmp/ccq49vDe.s:191    .text:00000000000000d0 .L0 
       src/riscv.cpp:35     .text:00000000000000d0 .L0 
     /tmp/ccq49vDe.s:199    .text:00000000000000d8 .L0 
       src/riscv.cpp:36     .text:00000000000000d8 .L0 
     /tmp/ccq49vDe.s:207    .text:00000000000000e0 .L0 
     /tmp/ccq49vDe.s:208    .text:00000000000000e0 .L0 
     /tmp/ccq49vDe.s:210    .text:00000000000000e4 .L0 
     /tmp/ccq49vDe.s:212    .text:00000000000000e8 .L0 
     /tmp/ccq49vDe.s:214    .text:00000000000000ec .L0 
     /tmp/ccq49vDe.s:215    .text:00000000000000ec .L0 
     /tmp/ccq49vDe.s:217    .text:00000000000000ec .L0 
     /tmp/ccq49vDe.s:218    .text:00000000000000ec .L0 
     /tmp/ccq49vDe.s:220    .text:00000000000000f0 .L0 
     /tmp/ccq49vDe.s:230    .text:00000000000000f8 .L0 
     /tmp/ccq49vDe.s:231    .text:00000000000000f8 .L0 
     /tmp/ccq49vDe.s:233    .text:00000000000000fc .L0 
     /tmp/ccq49vDe.s:245    .text:0000000000000104 .L0 
     /tmp/ccq49vDe.s:246    .text:0000000000000104 .L0 
     /tmp/ccq49vDe.s:248    .text:0000000000000108 .L0 
     /tmp/ccq49vDe.s:262    .text:0000000000000110 .L0 
     /tmp/ccq49vDe.s:263    .text:0000000000000110 .L0 
     /tmp/ccq49vDe.s:265    .text:0000000000000114 .L0 
     /tmp/ccq49vDe.s:281    .text:000000000000011c .L0 
     /tmp/ccq49vDe.s:282    .text:000000000000011c .L0 
     /tmp/ccq49vDe.s:284    .text:0000000000000120 .L0 
     /tmp/ccq49vDe.s:302    .text:0000000000000128 .L0 
     /tmp/ccq49vDe.s:303    .text:0000000000000128 .L0 
     /tmp/ccq49vDe.s:305    .text:000000000000012c .L0 
     /tmp/ccq49vDe.s:309    .text:0000000000000134 .L0 
     /tmp/ccq49vDe.s:310    .text:0000000000000134 .L0 
     /tmp/ccq49vDe.s:314    .text:0000000000000140 .L0 
     /tmp/ccq49vDe.s:315    .text:0000000000000140 .L0 
     /tmp/ccq49vDe.s:321    .text:0000000000000144 .L0 
     /tmp/ccq49vDe.s:322    .text:0000000000000144 .L0 
     /tmp/ccq49vDe.s:323    .text:0000000000000144 .L0 
     /tmp/ccq49vDe.s:330    .text:0000000000000148 .L0 
     /tmp/ccq49vDe.s:331    .text:0000000000000148 .L0 
     /tmp/ccq49vDe.s:332    .text:0000000000000148 .L0 
     /tmp/ccq49vDe.s:338    .text:0000000000000150 .L0 
     /tmp/ccq49vDe.s:339    .text:0000000000000150 .L0 
     /tmp/ccq49vDe.s:343    .text:000000000000015c .L0 
     /tmp/ccq49vDe.s:344    .text:000000000000015c .L0 
     /tmp/ccq49vDe.s:349    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccq49vDe.s 			page 22


     /tmp/ccq49vDe.s:350    .text:0000000000000164 .L0 
     /tmp/ccq49vDe.s:351    .text:0000000000000164 .L0 
     /tmp/ccq49vDe.s:353    .text:0000000000000168 .L0 
     /tmp/ccq49vDe.s:365    .text:000000000000016c .L0 
     /tmp/ccq49vDe.s:366    .text:000000000000016c .L0 
     /tmp/ccq49vDe.s:369    .text:0000000000000170 .L0 
     /tmp/ccq49vDe.s:371    .text:0000000000000174 .L0 
     /tmp/ccq49vDe.s:375    .text:0000000000000178 .L0 
       src/riscv.cpp:57     .text:0000000000000178 .L0 
     /tmp/ccq49vDe.s:387    .text:000000000000017c .L0 
     /tmp/ccq49vDe.s:388    .text:000000000000017c .L0 
     /tmp/ccq49vDe.s:393    .text:0000000000000180 .L0 
  src/../h/riscv.hpp:110    .text:0000000000000180 .L0 
     /tmp/ccq49vDe.s:403    .text:0000000000000184 .L0 
     /tmp/ccq49vDe.s:404    .text:0000000000000184 .L0 
     /tmp/ccq49vDe.s:409    .text:0000000000000188 .L0 
  src/../h/riscv.hpp:178    .text:0000000000000188 .L0 
     /tmp/ccq49vDe.s:419    .text:000000000000018c .L0 
     /tmp/ccq49vDe.s:420    .text:0000000000000190 .L0 
     /tmp/ccq49vDe.s:421    .text:0000000000000190 .L0 
     /tmp/ccq49vDe.s:423    .text:0000000000000194 .L0 
     /tmp/ccq49vDe.s:424    .text:0000000000000194 .L0 
     /tmp/ccq49vDe.s:426    .text:0000000000000198 .L0 
     /tmp/ccq49vDe.s:428    .text:000000000000019c .L0 
     /tmp/ccq49vDe.s:430    .text:00000000000001a0 .L0 
     /tmp/ccq49vDe.s:434    .text:00000000000001a4 .L0 
     /tmp/ccq49vDe.s:439    .text:00000000000001a4 .L0 
     /tmp/ccq49vDe.s:440    .text:00000000000001a4 .L0 
     /tmp/ccq49vDe.s:445    .text:00000000000001b4 .L0 
     /tmp/ccq49vDe.s:448    .text:00000000000001b8 .L0 
     /tmp/ccq49vDe.s:449    .text:00000000000001b8 .L0 
     /tmp/ccq49vDe.s:455    .text:00000000000001c0 .L0 
     /tmp/ccq49vDe.s:456    .text:00000000000001c0 .L0 
     /tmp/ccq49vDe.s:459    .text:00000000000001cc .L0 
     /tmp/ccq49vDe.s:460    .text:00000000000001cc .L0 
     /tmp/ccq49vDe.s:467    .text:00000000000001d8 .L0 
     /tmp/ccq49vDe.s:468    .text:00000000000001d8 .L0 
     /tmp/ccq49vDe.s:472    .text:00000000000001e4 .L0 
       src/riscv.cpp:67     .text:00000000000001e4 .L0 
     /tmp/ccq49vDe.s:485    .text:00000000000001ec .L0 
     /tmp/ccq49vDe.s:486    .text:00000000000001ec .L0 
     /tmp/ccq49vDe.s:489    .text:00000000000001f0 .L0 
     /tmp/ccq49vDe.s:490    .text:00000000000001f0 .L0 
     /tmp/ccq49vDe.s:493    .text:00000000000001f8 .L0 
       src/riscv.cpp:72     .text:00000000000001f8 .L0 
     /tmp/ccq49vDe.s:505    .text:0000000000000200 .L0 
     /tmp/ccq49vDe.s:506    .text:0000000000000200 .L0 
     /tmp/ccq49vDe.s:512    .text:000000000000020c .L0 
     /tmp/ccq49vDe.s:513    .text:000000000000020c .L0 
     /tmp/ccq49vDe.s:519    .text:0000000000000214 .L0 
     /tmp/ccq49vDe.s:520    .text:0000000000000214 .L0 
     /tmp/ccq49vDe.s:523    .text:0000000000000220 .L0 
     /tmp/ccq49vDe.s:524    .text:0000000000000220 .L0 
     /tmp/ccq49vDe.s:535    .text:000000000000022c .L0 
     /tmp/ccq49vDe.s:536    .text:000000000000022c .L0 
     /tmp/ccq49vDe.s:541    .text:0000000000000240 .L0 
     /tmp/ccq49vDe.s:542    .text:0000000000000240 .L0 
GAS LISTING /tmp/ccq49vDe.s 			page 23


     /tmp/ccq49vDe.s:545    .text:000000000000024c .L0 
     /tmp/ccq49vDe.s:550    .text:0000000000000250 .L0 
     /tmp/ccq49vDe.s:551    .text:0000000000000250 .L0 
     /tmp/ccq49vDe.s:556    .text:0000000000000254 .L0 
     /tmp/ccq49vDe.s:562    .text:0000000000000258 .L0 
     /tmp/ccq49vDe.s:563    .text:0000000000000258 .L0 
     /tmp/ccq49vDe.s:564    .text:0000000000000258 .L0 
     /tmp/ccq49vDe.s:571    .text:0000000000000260 .L0 
     /tmp/ccq49vDe.s:577    .text:0000000000000264 .L0 
     /tmp/ccq49vDe.s:578    .text:0000000000000264 .L0 
     /tmp/ccq49vDe.s:581    .text:0000000000000270 .L0 
     /tmp/ccq49vDe.s:582    .text:0000000000000270 .L0 
     /tmp/ccq49vDe.s:587    .text:000000000000027c .L0 
     /tmp/ccq49vDe.s:588    .text:000000000000027c .L0 
     /tmp/ccq49vDe.s:592    .text:0000000000000288 .L0 
     /tmp/ccq49vDe.s:601    .text:0000000000000288 .L0 
     /tmp/ccq49vDe.s:310    .text:0000000000000134 .L0 
     /tmp/ccq49vDe.s:456    .text:00000000000001c0 .L0 
     /tmp/ccq49vDe.s:506    .text:0000000000000200 .L0 
     /tmp/ccq49vDe.s:520    .text:0000000000000214 .L0 
     /tmp/ccq49vDe.s:536    .text:000000000000022c .L0 
     /tmp/ccq49vDe.s:542    .text:0000000000000240 .L0 
     /tmp/ccq49vDe.s:578    .text:0000000000000264 .L0 
     /tmp/ccq49vDe.s:168    .text:00000000000000c0 .L4
     /tmp/ccq49vDe.s:527    .text:000000000000022c .L19
     /tmp/ccq49vDe.s:585    .text:000000000000027c .L20
     /tmp/ccq49vDe.s:382    .text:000000000000017c .L9
     /tmp/ccq49vDe.s:355    .text:000000000000016c .L21
     /tmp/ccq49vDe.s:452    .text:00000000000001c0 .L22
     /tmp/ccq49vDe.s:463    .text:00000000000001d8 .L23
     /tmp/ccq49vDe.s:481    .text:00000000000001ec .L24
     /tmp/ccq49vDe.s:502    .text:0000000000000200 .L25
     /tmp/ccq49vDe.s:433    .text:00000000000001a4 .L26
     /tmp/ccq49vDe.s:372    .text:0000000000000178 .L8
     /tmp/ccq49vDe.s:557    .text:0000000000000258 .L14
     /tmp/ccq49vDe.s:573    .text:0000000000000264 .L27
     /tmp/ccq49vDe.s:2081   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccq49vDe.s:3506   .debug_str:00000000000007aa .LASF153
     /tmp/ccq49vDe.s:3444   .debug_str:0000000000000609 .LASF154
     /tmp/ccq49vDe.s:3314   .debug_str:000000000000028e .LASF155
     /tmp/ccq49vDe.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccq49vDe.s:595    .text:0000000000000288 .Letext0
     /tmp/ccq49vDe.s:3218   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccq49vDe.s:3416   .debug_str:0000000000000572 .LASF0
     /tmp/ccq49vDe.s:3440   .debug_str:00000000000005e3 .LASF1
     /tmp/ccq49vDe.s:3398   .debug_str:0000000000000502 .LASF2
     /tmp/ccq49vDe.s:3292   .debug_str:00000000000001eb .LASF3
     /tmp/ccq49vDe.s:3350   .debug_str:00000000000003b7 .LASF4
     /tmp/ccq49vDe.s:3484   .debug_str:0000000000000713 .LASF5
     /tmp/ccq49vDe.s:3254   .debug_str:00000000000000de .LASF6
     /tmp/ccq49vDe.s:3442   .debug_str:00000000000005f6 .LASF7
     /tmp/ccq49vDe.s:3414   .debug_str:000000000000055f .LASF8
     /tmp/ccq49vDe.s:3520   .debug_str:00000000000008c3 .LASF9
     /tmp/ccq49vDe.s:3330   .debug_str:0000000000000307 .LASF10
     /tmp/ccq49vDe.s:3454   .debug_str:000000000000066a .LASF11
     /tmp/ccq49vDe.s:3510   .debug_str:000000000000087a .LASF12
     /tmp/ccq49vDe.s:3260   .debug_str:00000000000000fc .LASF13
GAS LISTING /tmp/ccq49vDe.s 			page 24


     /tmp/ccq49vDe.s:3232   .debug_str:0000000000000058 .LASF14
     /tmp/ccq49vDe.s:3270   .debug_str:0000000000000150 .LASF15
     /tmp/ccq49vDe.s:3476   .debug_str:00000000000006d7 .LASF16
     /tmp/ccq49vDe.s:3284   .debug_str:00000000000001ad .LASF17
     /tmp/ccq49vDe.s:3436   .debug_str:00000000000005d2 .LASF62
     /tmp/ccq49vDe.s:3372   .debug_str:000000000000045f .LASF21
     /tmp/ccq49vDe.s:3494   .debug_str:0000000000000756 .LASF18
     /tmp/ccq49vDe.s:3434   .debug_str:00000000000005c9 .LASF19
     /tmp/ccq49vDe.s:3360   .debug_str:00000000000003ee .LASF20
     /tmp/ccq49vDe.s:3288   .debug_str:00000000000001d7 .LASF22
     /tmp/ccq49vDe.s:3280   .debug_str:0000000000000194 .LASF23
     /tmp/ccq49vDe.s:3374   .debug_str:000000000000046a .LASF24
     /tmp/ccq49vDe.s:3256   .debug_str:00000000000000e5 .LASF25
     /tmp/ccq49vDe.s:3472   .debug_str:00000000000006c5 .LASF58
     /tmp/ccq49vDe.s:3540   .debug_str:000000000000096e .LASF60
     /tmp/ccq49vDe.s:3234   .debug_str:0000000000000068 .LASF26
     /tmp/ccq49vDe.s:3306   .debug_str:0000000000000257 .LASF28
     /tmp/ccq49vDe.s:3300   .debug_str:0000000000000240 .LASF30
     /tmp/ccq49vDe.s:3298   .debug_str:000000000000022b .LASF32
     /tmp/ccq49vDe.s:3488   .debug_str:0000000000000736 .LASF27
     /tmp/ccq49vDe.s:3458   .debug_str:000000000000067f .LASF29
     /tmp/ccq49vDe.s:3504   .debug_str:00000000000007a3 .LASF31
     /tmp/ccq49vDe.s:3500   .debug_str:000000000000077e .LASF33
     /tmp/ccq49vDe.s:3318   .debug_str:00000000000002bf .LASF34
     /tmp/ccq49vDe.s:3286   .debug_str:00000000000001c3 .LASF35
     /tmp/ccq49vDe.s:3224   .debug_str:0000000000000011 .LASF36
     /tmp/ccq49vDe.s:3338   .debug_str:0000000000000354 .LASF37
     /tmp/ccq49vDe.s:3252   .debug_str:00000000000000d6 .LASF38
     /tmp/ccq49vDe.s:3262   .debug_str:000000000000010c .LASF39
     /tmp/ccq49vDe.s:3544   .debug_str:0000000000000991 .LASF40
     /tmp/ccq49vDe.s:3308   .debug_str:000000000000026c .LASF41
     /tmp/ccq49vDe.s:3418   .debug_str:000000000000057f .LASF42
     /tmp/ccq49vDe.s:3536   .debug_str:0000000000000956 .LASF43
     /tmp/ccq49vDe.s:3246   .debug_str:00000000000000ad .LASF44
     /tmp/ccq49vDe.s:3316   .debug_str:00000000000002ac .LASF45
     /tmp/ccq49vDe.s:3326   .debug_str:00000000000002f9 .LASF46
     /tmp/ccq49vDe.s:3502   .debug_str:0000000000000791 .LASF47
     /tmp/ccq49vDe.s:3242   .debug_str:000000000000008a .LASF48
     /tmp/ccq49vDe.s:3550   .debug_str:00000000000009b6 .LASF49
     /tmp/ccq49vDe.s:3542   .debug_str:0000000000000986 .LASF50
     /tmp/ccq49vDe.s:3482   .debug_str:00000000000006fb .LASF51
     /tmp/ccq49vDe.s:3438   .debug_str:00000000000005d8 .LASF52
     /tmp/ccq49vDe.s:3496   .debug_str:000000000000075f .LASF53
     /tmp/ccq49vDe.s:3268   .debug_str:0000000000000146 .LASF54
     /tmp/ccq49vDe.s:3344   .debug_str:000000000000038a .LASF55
     /tmp/ccq49vDe.s:3404   .debug_str:0000000000000521 .LASF56
     /tmp/ccq49vDe.s:3334   .debug_str:0000000000000327 .LASF57
     /tmp/ccq49vDe.s:3490   .debug_str:000000000000073d .LASF59
     /tmp/ccq49vDe.s:3264   .debug_str:0000000000000120 .LASF61
     /tmp/ccq49vDe.s:3524   .debug_str:00000000000008df .LASF120
     /tmp/ccq49vDe.s:3368   .debug_str:0000000000000422 .LASF122
     /tmp/ccq49vDe.s:3382   .debug_str:00000000000004a7 .LASF63
     /tmp/ccq49vDe.s:3384   .debug_str:00000000000004b1 .LASF156
     /tmp/ccq49vDe.s:3290   .debug_str:00000000000001e6 .LASF64
     /tmp/ccq49vDe.s:3392   .debug_str:00000000000004db .LASF65
     /tmp/ccq49vDe.s:3310   .debug_str:0000000000000280 .LASF66
     /tmp/ccq49vDe.s:3466   .debug_str:00000000000006ab .LASF67
GAS LISTING /tmp/ccq49vDe.s 			page 25


     /tmp/ccq49vDe.s:3348   .debug_str:00000000000003b2 .LASF68
     /tmp/ccq49vDe.s:3422   .debug_str:000000000000058f .LASF70
     /tmp/ccq49vDe.s:3352   .debug_str:00000000000003be .LASF73
     /tmp/ccq49vDe.s:3408   .debug_str:000000000000053b .LASF157
     /tmp/ccq49vDe.s:3336   .debug_str:000000000000033d .LASF158
     /tmp/ccq49vDe.s:3548   .debug_str:00000000000009b0 .LASF69
     /tmp/ccq49vDe.s:3396   .debug_str:00000000000004eb .LASF71
     /tmp/ccq49vDe.s:3410   .debug_str:0000000000000545 .LASF72
     /tmp/ccq49vDe.s:3272   .debug_str:000000000000015c .LASF74
     /tmp/ccq49vDe.s:3424   .debug_str:00000000000005a2 .LASF75
     /tmp/ccq49vDe.s:3362   .debug_str:00000000000003f7 .LASF76
     /tmp/ccq49vDe.s:3516   .debug_str:00000000000008b1 .LASF77
     /tmp/ccq49vDe.s:3342   .debug_str:000000000000036d .LASF78
     /tmp/ccq49vDe.s:3248   .debug_str:00000000000000b4 .LASF79
     /tmp/ccq49vDe.s:3296   .debug_str:000000000000020e .LASF80
     /tmp/ccq49vDe.s:3328   .debug_str:00000000000002ff .LASF81
     /tmp/ccq49vDe.s:3294   .debug_str:00000000000001f2 .LASF82
     /tmp/ccq49vDe.s:3508   .debug_str:000000000000086e .LASF83
     /tmp/ccq49vDe.s:3226   .debug_str:0000000000000019 .LASF84
     /tmp/ccq49vDe.s:3266   .debug_str:000000000000013c .LASF85
     /tmp/ccq49vDe.s:3370   .debug_str:0000000000000444 .LASF86
     /tmp/ccq49vDe.s:3426   .debug_str:00000000000005aa .LASF87
     /tmp/ccq49vDe.s:3244   .debug_str:0000000000000090 .LASF88
     /tmp/ccq49vDe.s:3364   .debug_str:0000000000000410 .LASF89
     /tmp/ccq49vDe.s:3534   .debug_str:000000000000093c .LASF90
     /tmp/ccq49vDe.s:3468   .debug_str:00000000000006b0 .LASF91
     /tmp/ccq49vDe.s:3532   .debug_str:0000000000000923 .LASF92
     /tmp/ccq49vDe.s:3240   .debug_str:0000000000000082 .LASF159
     /tmp/ccq49vDe.s:3340   .debug_str:0000000000000368 .LASF93
     /tmp/ccq49vDe.s:3460   .debug_str:0000000000000692 .LASF94
     /tmp/ccq49vDe.s:3446   .debug_str:0000000000000617 .LASF95
     /tmp/ccq49vDe.s:3278   .debug_str:000000000000017d .LASF96
     /tmp/ccq49vDe.s:3400   .debug_str:0000000000000510 .LASF97
     /tmp/ccq49vDe.s:3546   .debug_str:0000000000000999 .LASF98
     /tmp/ccq49vDe.s:3388   .debug_str:00000000000004bb .LASF99
     /tmp/ccq49vDe.s:3250   .debug_str:00000000000000bd .LASF100
     /tmp/ccq49vDe.s:3282   .debug_str:00000000000001a0 .LASF101
     /tmp/ccq49vDe.s:3450   .debug_str:0000000000000636 .LASF102
     /tmp/ccq49vDe.s:3464   .debug_str:00000000000006a6 .LASF160
     /tmp/ccq49vDe.s:3478   .debug_str:00000000000006ed .LASF103
     /tmp/ccq49vDe.s:3406   .debug_str:000000000000052b .LASF104
     /tmp/ccq49vDe.s:3302   .debug_str:0000000000000249 .LASF105
     /tmp/ccq49vDe.s:3346   .debug_str:00000000000003a0 .LASF106
     /tmp/ccq49vDe.s:3530   .debug_str:000000000000091b .LASF107
     /tmp/ccq49vDe.s:3332   .debug_str:0000000000000315 .LASF108
     /tmp/ccq49vDe.s:3354   .debug_str:00000000000003d5 .LASF109
     /tmp/ccq49vDe.s:3514   .debug_str:000000000000089b .LASF110
     /tmp/ccq49vDe.s:3238   .debug_str:0000000000000078 .LASF111
     /tmp/ccq49vDe.s:3448   .debug_str:0000000000000622 .LASF112
     /tmp/ccq49vDe.s:3304   .debug_str:000000000000024f .LASF161
     /tmp/ccq49vDe.s:3412   .debug_str:000000000000054a .LASF162
     /tmp/ccq49vDe.s:3358   .debug_str:00000000000003e9 .LASF113
     /tmp/ccq49vDe.s:3276   .debug_str:0000000000000177 .LASF114
     /tmp/ccq49vDe.s:3480   .debug_str:00000000000006f3 .LASF115
     /tmp/ccq49vDe.s:3430   .debug_str:00000000000005ba .LASF116
     /tmp/ccq49vDe.s:3356   .debug_str:00000000000003e0 .LASF117
     /tmp/ccq49vDe.s:3222   .debug_str:0000000000000009 .LASF118
GAS LISTING /tmp/ccq49vDe.s 			page 26


     /tmp/ccq49vDe.s:3470   .debug_str:00000000000006b8 .LASF119
     /tmp/ccq49vDe.s:3376   .debug_str:0000000000000477 .LASF121
     /tmp/ccq49vDe.s:3528   .debug_str:0000000000000902 .LASF123
     /tmp/ccq49vDe.s:3526   .debug_str:00000000000008f4 .LASF163
     /tmp/ccq49vDe.s:3324   .debug_str:00000000000002d1 .LASF164
     /tmp/ccq49vDe.s:3420   .debug_str:0000000000000586 .LASF124
     /tmp/ccq49vDe.s:3390   .debug_str:00000000000004c8 .LASF125
     /tmp/ccq49vDe.s:3486   .debug_str:0000000000000725 .LASF165
     /tmp/ccq49vDe.s:3258   .debug_str:00000000000000f1 .LASF126
     /tmp/ccq49vDe.s:3394   .debug_str:00000000000004e0 .LASF127
     /tmp/ccq49vDe.s:3312   .debug_str:0000000000000289 .LASF128
     /tmp/ccq49vDe.s:3492   .debug_str:000000000000074c .LASF129
     /tmp/ccq49vDe.s:3366   .debug_str:0000000000000419 .LASF130
     /tmp/ccq49vDe.s:3452   .debug_str:0000000000000656 .LASF131
     /tmp/ccq49vDe.s:3380   .debug_str:0000000000000495 .LASF132
     /tmp/ccq49vDe.s:3228   .debug_str:0000000000000037 .LASF133
     /tmp/ccq49vDe.s:3512   .debug_str:0000000000000889 .LASF134
     /tmp/ccq49vDe.s:3220   .debug_str:0000000000000000 .LASF135
     /tmp/ccq49vDe.s:62     .text:0000000000000028 .LFB41
     /tmp/ccq49vDe.s:593    .text:0000000000000288 .LFE41
     /tmp/ccq49vDe.s:3428   .debug_str:00000000000005b5 .LASF136
     /tmp/ccq49vDe.s:3462   .debug_str:000000000000069e .LASF137
     /tmp/ccq49vDe.s:3236   .debug_str:0000000000000071 .LASF138
     /tmp/ccq49vDe.s:3200   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccq49vDe.s:3432   .debug_str:00000000000005c4 .LASF139
     /tmp/ccq49vDe.s:3320   .debug_str:00000000000002c7 .LASF140
     /tmp/ccq49vDe.s:3322   .debug_str:00000000000002cc .LASF141
     /tmp/ccq49vDe.s:3402   .debug_str:000000000000051c .LASF142
     /tmp/ccq49vDe.s:3386   .debug_str:00000000000004b6 .LASF143
     /tmp/ccq49vDe.s:3036   .debug_loc:0000000000000000 .LLST1
     /tmp/ccq49vDe.s:3498   .debug_str:0000000000000777 .LASF144
     /tmp/ccq49vDe.s:3052   .debug_loc:000000000000004a .LLST2
     /tmp/ccq49vDe.s:465    .text:00000000000001d8 .LBB67
     /tmp/ccq49vDe.s:478    .text:00000000000001e8 .LBE67
     /tmp/ccq49vDe.s:3063   .debug_loc:0000000000000080 .LLST14
     /tmp/ccq49vDe.s:470    .text:00000000000001e4 .LVL22
     /tmp/ccq49vDe.s:483    .text:00000000000001ec .LBB63
     /tmp/ccq49vDe.s:499    .text:00000000000001fc .LBE63
     /tmp/ccq49vDe.s:3070   .debug_loc:00000000000000a3 .LLST13
     /tmp/ccq49vDe.s:491    .text:00000000000001f8 .LVL25
     /tmp/ccq49vDe.s:307    .text:0000000000000134 .LBB53
     /tmp/ccq49vDe.s:358    .text:000000000000016c .LBE53
     /tmp/ccq49vDe.s:3077   .debug_loc:00000000000000c6 .LLST3
     /tmp/ccq49vDe.s:3518   .debug_str:00000000000008bc .LASF145
     /tmp/ccq49vDe.s:3084   .debug_loc:00000000000000e9 .LLST4
     /tmp/ccq49vDe.s:3091   .debug_loc:000000000000010c .LLST5
     /tmp/ccq49vDe.s:318    .text:0000000000000144 .LBB54
     /tmp/ccq49vDe.s:326    .text:0000000000000148 .LBE54
     /tmp/ccq49vDe.s:3098   .debug_loc:000000000000012f .LLST6
     /tmp/ccq49vDe.s:328    .text:0000000000000148 .LBB56
     /tmp/ccq49vDe.s:336    .text:0000000000000150 .LBE56
     /tmp/ccq49vDe.s:3105   .debug_loc:0000000000000152 .LLST7
     /tmp/ccq49vDe.s:3113   .debug_loc:0000000000000176 .LLST8
     /tmp/ccq49vDe.s:347    .text:0000000000000164 .LBB58
     /tmp/ccq49vDe.s:357    .text:000000000000016c .LBE58
     /tmp/ccq49vDe.s:3120   .debug_loc:0000000000000199 .LLST9
     /tmp/ccq49vDe.s:3127   .debug_loc:00000000000001bc .LLST10
GAS LISTING /tmp/ccq49vDe.s 			page 27


     /tmp/ccq49vDe.s:341    .text:000000000000015c .LVL7
     /tmp/ccq49vDe.s:345    .text:0000000000000164 .LVL8
     /tmp/ccq49vDe.s:509    .text:000000000000020c .LBB60
     /tmp/ccq49vDe.s:517    .text:0000000000000214 .LBE60
     /tmp/ccq49vDe.s:3134   .debug_loc:00000000000001df .LLST11
     /tmp/ccq49vDe.s:3142   .debug_loc:0000000000000203 .LLST12
     /tmp/ccq49vDe.s:443    .text:00000000000001b4 .LVL18
     /tmp/ccq49vDe.s:461    .text:00000000000001d4 .LVL21
     /tmp/ccq49vDe.s:525    .text:0000000000000228 .LVL29
     /tmp/ccq49vDe.s:78     .text:0000000000000040 .LBB39
     /tmp/ccq49vDe.s:93     .text:000000000000004c .LBE39
     /tmp/ccq49vDe.s:97     .text:0000000000000050 .LBB41
     /tmp/ccq49vDe.s:112    .text:000000000000005c .LBE41
     /tmp/ccq49vDe.s:116    .text:0000000000000060 .LBB43
     /tmp/ccq49vDe.s:131    .text:000000000000006c .LBE43
     /tmp/ccq49vDe.s:547    .text:0000000000000250 .LBB90
     /tmp/ccq49vDe.s:554    .text:0000000000000254 .LBE90
     /tmp/ccq49vDe.s:3149   .debug_loc:0000000000000226 .LLST15
     /tmp/ccq49vDe.s:560    .text:0000000000000258 .LBB92
     /tmp/ccq49vDe.s:575    .text:0000000000000264 .LBE92
     /tmp/ccq49vDe.s:3156   .debug_loc:0000000000000249 .LLST16
     /tmp/ccq49vDe.s:390    .text:0000000000000180 .LBB99
     /tmp/ccq49vDe.s:401    .text:0000000000000184 .LBE99
     /tmp/ccq49vDe.s:3164   .debug_loc:000000000000026d .LLST17
     /tmp/ccq49vDe.s:406    .text:0000000000000188 .LBB101
     /tmp/ccq49vDe.s:417    .text:000000000000018c .LBE101
     /tmp/ccq49vDe.s:3171   .debug_loc:0000000000000290 .LLST18
     /tmp/ccq49vDe.s:166    .text:00000000000000bc .LVL2
     /tmp/ccq49vDe.s:583    .text:0000000000000278 .LVL34
     /tmp/ccq49vDe.s:589    .text:0000000000000284 .LVL35
     /tmp/ccq49vDe.s:10     .text:0000000000000000 .LFB40
     /tmp/ccq49vDe.s:56     .text:0000000000000028 .LFE40
     /tmp/ccq49vDe.s:22     .text:000000000000000c .LBB37
     /tmp/ccq49vDe.s:35     .text:0000000000000014 .LBE37
     /tmp/ccq49vDe.s:3178   .debug_loc:00000000000002b3 .LLST0
     /tmp/ccq49vDe.s:3538   .debug_str:0000000000000969 .LASF146
     /tmp/ccq49vDe.s:3456   .debug_str:0000000000000679 .LASF147
     /tmp/ccq49vDe.s:3274   .debug_str:0000000000000172 .LASF148
     /tmp/ccq49vDe.s:3522   .debug_str:00000000000008d3 .LASF149
     /tmp/ccq49vDe.s:3230   .debug_str:000000000000004d .LASF150
     /tmp/ccq49vDe.s:3474   .debug_str:00000000000006d0 .LASF151
     /tmp/ccq49vDe.s:3378   .debug_str:0000000000000485 .LASF152
     /tmp/ccq49vDe.s:373    .text:0000000000000178 .LVL11
     /tmp/ccq49vDe.s:380    .text:000000000000017c .LVL12
     /tmp/ccq49vDe.s:447    .text:00000000000001b8 .LVL19
     /tmp/ccq49vDe.s:451    .text:00000000000001c0 .LVL20
     /tmp/ccq49vDe.s:501    .text:0000000000000200 .LVL26
     /tmp/ccq49vDe.s:367    .text:0000000000000170 .LVL10
     /tmp/ccq49vDe.s:432    .text:00000000000001a4 .LVL17
     /tmp/ccq49vDe.s:480    .text:00000000000001ec .LVL23
     /tmp/ccq49vDe.s:487    .text:00000000000001f0 .LVL24
     /tmp/ccq49vDe.s:312    .text:0000000000000140 .LVL3
     /tmp/ccq49vDe.s:354    .text:000000000000016c .LVL9
     /tmp/ccq49vDe.s:316    .text:0000000000000144 .LVL4
     /tmp/ccq49vDe.s:324    .text:0000000000000148 .LVL5
     /tmp/ccq49vDe.s:334    .text:0000000000000150 .LVL6
     /tmp/ccq49vDe.s:508    .text:000000000000020c .LVL27
GAS LISTING /tmp/ccq49vDe.s 			page 28


     /tmp/ccq49vDe.s:515    .text:0000000000000214 .LVL28
     /tmp/ccq49vDe.s:546    .text:0000000000000250 .LVL30
     /tmp/ccq49vDe.s:552    .text:0000000000000254 .LVL31
     /tmp/ccq49vDe.s:559    .text:0000000000000258 .LVL32
     /tmp/ccq49vDe.s:572    .text:0000000000000264 .LVL33
     /tmp/ccq49vDe.s:389    .text:0000000000000180 .LVL13
     /tmp/ccq49vDe.s:398    .text:0000000000000184 .LVL14
     /tmp/ccq49vDe.s:405    .text:0000000000000188 .LVL15
     /tmp/ccq49vDe.s:414    .text:000000000000018c .LVL16
     /tmp/ccq49vDe.s:21     .text:000000000000000c .LVL0
     /tmp/ccq49vDe.s:32     .text:0000000000000014 .LVL1
     /tmp/ccq49vDe.s:602    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccq49vDe.s:169    .text:00000000000000c0 .LBB46
     /tmp/ccq49vDe.s:223    .text:00000000000000f8 .LBE46
     /tmp/ccq49vDe.s:227    .text:00000000000000f8 .LBB84
     /tmp/ccq49vDe.s:237    .text:0000000000000104 .LBE84
     /tmp/ccq49vDe.s:241    .text:0000000000000104 .LBB85
     /tmp/ccq49vDe.s:253    .text:0000000000000110 .LBE85
     /tmp/ccq49vDe.s:257    .text:0000000000000110 .LBB86
     /tmp/ccq49vDe.s:271    .text:000000000000011c .LBE86
     /tmp/ccq49vDe.s:275    .text:000000000000011c .LBB87
     /tmp/ccq49vDe.s:291    .text:0000000000000128 .LBE87
     /tmp/ccq49vDe.s:295    .text:0000000000000128 .LBB88
     /tmp/ccq49vDe.s:384    .text:000000000000017c .LBE88
     /tmp/ccq49vDe.s:436    .text:00000000000001a4 .LBB89
     /tmp/ccq49vDe.s:533    .text:000000000000022c .LBE89

UNDEFINED SYMBOLS
__putc
_ZN3TCB7runningE
_ZN3TCB5blockEPS_
_ZN3TCB8dispatchEv
_ZN3TCB12createThreadEPFvPvES0_
_ZN3TCB16timeSliceCounterE
__mem_alloc
__mem_free
console_handler
