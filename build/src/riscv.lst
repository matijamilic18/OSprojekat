GAS LISTING /tmp/cctLyDEK.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB33:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   9:src/riscv.cpp **** #include "../h/print.hpp"
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::popSppSpie()
  12:src/riscv.cpp **** {
  12              		.loc 1 12 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  13:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 13 5
  21              		.loc 1 13 38 is_stmt 0
  22              	#APP
  23              	# 13 "src/riscv.cpp" 1
  14              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 14 5 is_stmt 1
  27              		.loc 1 14 29 is_stmt 0
  28              	# 14 "src/riscv.cpp" 1
  15              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 15 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE33:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
GAS LISTING /tmp/cctLyDEK.s 			page 2


  45 0000 0A00     		.string	"\n"
  46 0002 00000000 		.align	3
  46      0000
  47              	.LC1:
  48 0008 6563616C 		.string	"ecall\n"
  48      6C0A00
  49 000f 00       		.align	3
  50              	.LC2:
  51 0010 54687265 		.string	"ThreadA created2\n"
  51      61644120 
  51      63726561 
  51      74656432 
  51      0A00
  52 0022 00000000 		.align	3
  52      0000
  53              	.LC3:
  54 0028 776F6F6F 		.string	"wooow\n"
  54      770A00
  55              		.text
  56              		.align	2
  57              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  59              	_ZN5Riscv20handleSupervisorTrapEv:
  60              	.LFB34:
  16:src/riscv.cpp **** 
  17:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  18:src/riscv.cpp **** {
  61              		.loc 1 18 1 is_stmt 1
  62              		.cfi_startproc
  63 0020 130101FA 		addi	sp,sp,-96
  64              		.cfi_def_cfa_offset 96
  65 0024 233C1104 		sd	ra,88(sp)
  66 0028 23388104 		sd	s0,80(sp)
  67 002c 23349104 		sd	s1,72(sp)
  68 0030 23302105 		sd	s2,64(sp)
  69 0034 233C3103 		sd	s3,56(sp)
  70 0038 23384103 		sd	s4,48(sp)
  71              		.cfi_offset 1, -8
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -24
  74              		.cfi_offset 18, -32
  75              		.cfi_offset 19, -40
  76              		.cfi_offset 20, -48
  77 003c 13040106 		addi	s0,sp,96
  78              		.cfi_def_cfa 8, 0
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****     uint64 volatile sepc = r_sepc();
  79              		.loc 1 20 5
  80              	.LBB18:
  81              	.LBB19:
  82              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cctLyDEK.s 			page 3


   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non-inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
GAS LISTING /tmp/cctLyDEK.s 			page 4


  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  93:src/../h/riscv.hpp ****     return scause;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
  83              		.loc 2 103 5
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  84              		.loc 2 104 5
  85              		.loc 2 104 64 is_stmt 0
  86              	#APP
  87              	# 104 "src/../h/riscv.hpp" 1
 105              	    return sepc;
  88              		csrr a5, sepc
  89              	# 0 "" 2
  90              	#NO_APP
  91 0044 2338F4FA 		sd	a5,-80(s0)
  92              		.loc 2 105 5 is_stmt 1
  93              		.loc 2 105 12 is_stmt 0
  94 0048 833704FB 		ld	a5,-80(s0)
  95              	.LBE19:
  96              	.LBE18:
  97              		.loc 1 20 35
  98 004c 2334F4FC 		sd	a5,-56(s0)
GAS LISTING /tmp/cctLyDEK.s 			page 5


  21:src/riscv.cpp ****     uint64 volatile sstatus= r_sstatus();
  99              		.loc 1 21 5 is_stmt 1
 100              	.LBB20:
 101              	.LBB21:
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cctLyDEK.s 			page 6


 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 102              		.loc 2 171 5
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 103              		.loc 2 172 5
 104              		.loc 2 172 76 is_stmt 0
 105              	#APP
 106              	# 172 "src/../h/riscv.hpp" 1
 173              	    return sstatus;
 107              		csrr a5, sstatus
 108              	# 0 "" 2
 109              	#NO_APP
 110 0054 2334F4FA 		sd	a5,-88(s0)
 111              		.loc 2 173 5 is_stmt 1
 112              		.loc 2 173 12 is_stmt 0
 113 0058 833784FA 		ld	a5,-88(s0)
 114              	.LBE21:
 115              	.LBE20:
 116              		.loc 1 21 40
 117 005c 2330F4FC 		sd	a5,-64(s0)
  22:src/riscv.cpp ****     uint64 volatile scause = r_scause();
 118              		.loc 1 22 5 is_stmt 1
 119              	.LBB22:
 120              	.LBB23:
  91:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 121              		.loc 2 91 5
  92:src/../h/riscv.hpp ****     return scause;
 122              		.loc 2 92 5
  92:src/../h/riscv.hpp ****     return scause;
 123              		.loc 2 92 72 is_stmt 0
 124              	#APP
 125              	# 92 "src/../h/riscv.hpp" 1
 126              		csrr a5, scause
 127              	# 0 "" 2
 128              	#NO_APP
 129 0064 2330F4FA 		sd	a5,-96(s0)
  93:src/../h/riscv.hpp **** }
 130              		.loc 2 93 5 is_stmt 1
  93:src/../h/riscv.hpp **** }
 131              		.loc 2 93 12 is_stmt 0
 132 0068 833704FA 		ld	a5,-96(s0)
 133              	.LBE23:
 134              	.LBE22:
 135              		.loc 1 22 39
 136 006c 233CF4FA 		sd	a5,-72(s0)
  23:src/riscv.cpp ****     printInteger(scause);
GAS LISTING /tmp/cctLyDEK.s 			page 7


 137              		.loc 1 23 5 is_stmt 1
 138              		.loc 1 23 17 is_stmt 0
 139 0070 033584FB 		ld	a0,-72(s0)
 140 0074 97000000 		call	_Z12printIntegerm@plt
 140      E7800000 
 141              	.LVL0:
  24:src/riscv.cpp ****     printString("\n");
 142              		.loc 1 24 5 is_stmt 1
 143              		.loc 1 24 16 is_stmt 0
 144 007c 17050000 		lla	a0,.LC0
 144      13050500 
 145 0084 97000000 		call	_Z11printStringPKc@plt
 145      E7800000 
 146              	.LVL1:
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 147              		.loc 1 26 5 is_stmt 1
 148              	.LBB24:
 149              		.loc 1 26 16 is_stmt 0
 150 008c 033784FB 		ld	a4,-72(s0)
 151              		.loc 1 26 40
 152 0090 93078000 		li	a5,8
 153 0094 6304F704 		beq	a4,a5,.L4
 154              		.loc 1 26 50 discriminator 2
 155 0098 033784FB 		ld	a4,-72(s0)
 156              		.loc 1 26 40 discriminator 2
 157 009c 93079000 		li	a5,9
 158 00a0 630EF702 		beq	a4,a5,.L4
  27:src/riscv.cpp ****     {
  28:src/riscv.cpp ****         uint64  CODE;
  29:src/riscv.cpp ****         uint64  arg1;
  30:src/riscv.cpp ****         uint64  arg2;
  31:src/riscv.cpp ****         uint64  arg3;
  32:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r" (CODE));
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));
  34:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));
  35:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));
  36:src/riscv.cpp ****         printString("ecall\n");
  37:src/riscv.cpp **** 
  38:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  39:src/riscv.cpp ****         sepc= sepc +4;
  40:src/riscv.cpp ****         uint64 rett;
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****         thread_t* handle;
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****         if (CODE == SCALL_THREAD_CREATE){
  45:src/riscv.cpp ****             printString("ThreadA created2\n");
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****             handle = (thread_t*) arg1;
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****             if (handle != nullptr){
  50:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****                 rett=0;
  53:src/riscv.cpp ****             }else {
  54:src/riscv.cpp ****                 rett=-1;
  55:src/riscv.cpp ****             }
GAS LISTING /tmp/cctLyDEK.s 			page 8


  56:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
  57:src/riscv.cpp **** 
  58:src/riscv.cpp **** 
  59:src/riscv.cpp **** 
  60:src/riscv.cpp ****         }else if (CODE == SCALL_THREAD_DISPATCH){
  61:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  62:src/riscv.cpp ****             TCB::dispatch();
  63:src/riscv.cpp **** 
  64:src/riscv.cpp ****         }
  65:src/riscv.cpp **** 
  66:src/riscv.cpp **** 
  67:src/riscv.cpp **** 
  68:src/riscv.cpp **** 
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****         /*TCB::timeSliceCounter = 0;
  71:src/riscv.cpp ****         TCB::dispatch();
  72:src/riscv.cpp ****         w_sstatus(sstatus);
  73:src/riscv.cpp ****         w_sepc(sepc);*/
  74:src/riscv.cpp ****     }
  75:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 159              		.loc 1 75 10 is_stmt 1
 160              		.loc 1 75 21 is_stmt 0
 161 00a4 033784FB 		ld	a4,-72(s0)
 162              		.loc 1 75 10
 163 00a8 9307F0FF 		li	a5,-1
 164 00ac 9397F703 		slli	a5,a5,63
 165 00b0 93871700 		addi	a5,a5,1
 166 00b4 6304F70E 		beq	a4,a5,.L14
  76:src/riscv.cpp ****     {
  77:src/riscv.cpp ****         printString("wooow\n");
  78:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  79:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  80:src/riscv.cpp ****         TCB::timeSliceCounter++;
  81:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  82:src/riscv.cpp ****         {
  83:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  84:src/riscv.cpp ****             TCB::dispatch();
  85:src/riscv.cpp ****         }
  86:src/riscv.cpp ****         }
  87:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 167              		.loc 1 87 10 is_stmt 1
 168              		.loc 1 87 21 is_stmt 0
 169 00b8 033784FB 		ld	a4,-72(s0)
 170              		.loc 1 87 10
 171 00bc 9307F0FF 		li	a5,-1
 172 00c0 9397F703 		slli	a5,a5,63
 173 00c4 93879700 		addi	a5,a5,9
 174 00c8 6308F712 		beq	a4,a5,.L15
  88:src/riscv.cpp ****     {
  89:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  90:src/riscv.cpp ****         console_handler();
  91:src/riscv.cpp ****     }
  92:src/riscv.cpp ****     else
  93:src/riscv.cpp ****     {
  94:src/riscv.cpp ****         __putc('g');
 175              		.loc 1 94 9 is_stmt 1
 176              		.loc 1 94 15 is_stmt 0
GAS LISTING /tmp/cctLyDEK.s 			page 9


 177 00cc 13057006 		li	a0,103
 178 00d0 97000000 		call	__putc@plt
 178      E7800000 
 179              	.LVL2:
 180 00d8 6F000004 		j	.L9
 181              	.L4:
 182              	.LBB25:
  28:src/riscv.cpp ****         uint64  arg1;
 183              		.loc 1 28 9 is_stmt 1
  29:src/riscv.cpp ****         uint64  arg2;
 184              		.loc 1 29 9
  30:src/riscv.cpp ****         uint64  arg3;
 185              		.loc 1 30 9
  31:src/riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r" (CODE));
 186              		.loc 1 31 9
  32:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));
 187              		.loc 1 32 9
  32:src/riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));
 188              		.loc 1 32 52 is_stmt 0
 189              	#APP
 190              	# 32 "src/riscv.cpp" 1
 191              		mv s1, a0
 192              	# 0 "" 2
 193              	.LVL3:
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));
 194              		.loc 1 33 9 is_stmt 1
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));
 195              		.loc 1 33 52 is_stmt 0
 196              	# 33 "src/riscv.cpp" 1
 197              		mv s2, a1
 198              	# 0 "" 2
 199              	.LVL4:
  34:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));
 200              		.loc 1 34 9 is_stmt 1
  34:src/riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));
 201              		.loc 1 34 52 is_stmt 0
 202              	# 34 "src/riscv.cpp" 1
 203              		mv s3, a2
 204              	# 0 "" 2
 205              	.LVL5:
  35:src/riscv.cpp ****         printString("ecall\n");
 206              		.loc 1 35 9 is_stmt 1
  35:src/riscv.cpp ****         printString("ecall\n");
 207              		.loc 1 35 52 is_stmt 0
 208              	# 35 "src/riscv.cpp" 1
 209              		mv s4, a3
 210              	# 0 "" 2
 211              	.LVL6:
  36:src/riscv.cpp **** 
 212              		.loc 1 36 9 is_stmt 1
  36:src/riscv.cpp **** 
 213              		.loc 1 36 20 is_stmt 0
 214              	#NO_APP
 215 00ec 17050000 		lla	a0,.LC1
 215      13050500 
 216 00f4 97000000 		call	_Z11printStringPKc@plt
 216      E7800000 
GAS LISTING /tmp/cctLyDEK.s 			page 10


 217              	.LVL7:
  39:src/riscv.cpp ****         uint64 rett;
 218              		.loc 1 39 9 is_stmt 1
  39:src/riscv.cpp ****         uint64 rett;
 219              		.loc 1 39 15 is_stmt 0
 220 00fc 833784FC 		ld	a5,-56(s0)
  39:src/riscv.cpp ****         uint64 rett;
 221              		.loc 1 39 20
 222 0100 93874700 		addi	a5,a5,4
  39:src/riscv.cpp ****         uint64 rett;
 223              		.loc 1 39 13
 224 0104 2334F4FC 		sd	a5,-56(s0)
  40:src/riscv.cpp **** 
 225              		.loc 1 40 9 is_stmt 1
  42:src/riscv.cpp **** 
 226              		.loc 1 42 9
  44:src/riscv.cpp ****             printString("ThreadA created2\n");
 227              		.loc 1 44 9
 228 0108 93071001 		li	a5,17
 229 010c 638EF402 		beq	s1,a5,.L16
  60:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 230              		.loc 1 60 15
 231 0110 93073001 		li	a5,19
 232 0114 6388F406 		beq	s1,a5,.L17
 233              	.LVL8:
 234              	.L9:
 235              	.LBE25:
 236              	.LBE24:
  95:src/riscv.cpp ****     }
  96:src/riscv.cpp ****     w_sepc(sepc);
 237              		.loc 1 96 5
 238              		.loc 1 96 11 is_stmt 0
 239 0118 833784FC 		ld	a5,-56(s0)
 240              	.LVL9:
 241              	.LBB31:
 242              	.LBB32:
 110:src/../h/riscv.hpp **** }
 243              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 244              		.loc 2 110 65 is_stmt 0
 245              	#APP
 246              	# 110 "src/../h/riscv.hpp" 1
 247              		csrw sepc, a5
 248              	# 0 "" 2
 249              	.LVL10:
 250              	#NO_APP
 251              	.LBE32:
 252              	.LBE31:
  97:src/riscv.cpp ****     w_sstatus(sstatus);
 253              		.loc 1 97 5 is_stmt 1
 254              		.loc 1 97 14 is_stmt 0
 255 0120 833704FC 		ld	a5,-64(s0)
 256              	.LVL11:
 257              	.LBB33:
 258              	.LBB34:
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cctLyDEK.s 			page 11


 176:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 177:src/../h/riscv.hpp **** {
 178:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 259              		.loc 2 178 5 is_stmt 1
 260              		.loc 2 178 77 is_stmt 0
 261              	#APP
 262              	# 178 "src/../h/riscv.hpp" 1
 179              	}
 263              		csrw sstatus, a5
 264              	# 0 "" 2
 265              	.LVL12:
 266              	#NO_APP
 267              	.LBE34:
 268              	.LBE33:
  98:src/riscv.cpp **** }...
 269              		.loc 1 98 1
 270 0128 83308105 		ld	ra,88(sp)
 271              		.cfi_remember_state
 272              		.cfi_restore 1
 273 012c 03340105 		ld	s0,80(sp)
 274              		.cfi_restore 8
 275              		.cfi_def_cfa 2, 96
 276 0130 83348104 		ld	s1,72(sp)
 277              		.cfi_restore 9
 278 0134 03390104 		ld	s2,64(sp)
 279              		.cfi_restore 18
 280 0138 83398103 		ld	s3,56(sp)
 281              		.cfi_restore 19
 282 013c 033A0103 		ld	s4,48(sp)
 283              		.cfi_restore 20
 284 0140 13010106 		addi	sp,sp,96
 285              		.cfi_def_cfa_offset 0
 286 0144 67800000 		jr	ra
 287              	.LVL13:
 288              	.L16:
 289              		.cfi_restore_state
 290              	.LBB35:
 291              	.LBB26:
  45:src/riscv.cpp ****             printString("ThreadA created2\n");
 292              		.loc 1 45 13 is_stmt 1
  45:src/riscv.cpp ****             printString("ThreadA created2\n");
 293              		.loc 1 45 24 is_stmt 0
 294 0148 17050000 		lla	a0,.LC2
 294      13050500 
 295 0150 97000000 		call	_Z11printStringPKc@plt
 295      E7800000 
 296              	.LVL14:
  47:src/riscv.cpp ****             handle = (thread_t*) arg1;
 297              		.loc 1 47 13 is_stmt 1
  49:src/riscv.cpp ****             if (handle != nullptr){
 298              		.loc 1 49 13
 299 0158 63180900 		bnez	s2,.L18
  54:src/riscv.cpp ****                 rett=-1;
 300              		.loc 1 54 21 is_stmt 0
 301 015c 9307F0FF 		li	a5,-1
 302              	.L8:
 303              	.LVL15:
GAS LISTING /tmp/cctLyDEK.s 			page 12


  56:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
 304              		.loc 1 56 13 is_stmt 1
  56:src/riscv.cpp ****             __asm__ volatile ("sd %0, 10*8(fp)" :: "r"(rett));
 305              		.loc 1 56 62 is_stmt 0
 306              	#APP
 307              	# 56 "src/riscv.cpp" 1
 308              		sd a5, 10*8(fp)
 309              	# 0 "" 2
 310              	#NO_APP
 311 0164 6FF05FFB 		j	.L9
 312              	.LVL16:
 313              	.L18:
  50:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 314              		.loc 1 50 17 is_stmt 1
  50:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 315              		.loc 1 50 44 is_stmt 0
 316 0168 93050A00 		mv	a1,s4
 317 016c 13850900 		mv	a0,s3
 318 0170 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
 318      E7800000 
 319              	.LVL17:
  50:src/riscv.cpp ****                 *handle = TCB::createThread(reinterpret_cast<void (*) (void*)>(arg2),(void*)arg3);
 320              		.loc 1 50 25
 321 0178 2330A900 		sd	a0,0(s2)
  52:src/riscv.cpp ****                 rett=0;
 322              		.loc 1 52 17 is_stmt 1
 323              	.LVL18:
  52:src/riscv.cpp ****                 rett=0;
 324              		.loc 1 52 21 is_stmt 0
 325 017c 93070000 		li	a5,0
 326 0180 6FF01FFE 		j	.L8
 327              	.LVL19:
 328              	.L17:
  61:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 329              		.loc 1 61 13 is_stmt 1
  61:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 330              		.loc 1 61 34 is_stmt 0
 331 0184 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 331      83B70700 
 332 018c 23B00700 		sd	zero,0(a5)
  62:src/riscv.cpp ****             TCB::dispatch();
 333              		.loc 1 62 13 is_stmt 1
  62:src/riscv.cpp ****             TCB::dispatch();
 334              		.loc 1 62 26 is_stmt 0
 335 0190 97000000 		call	_ZN3TCB8dispatchEv@plt
 335      E7800000 
 336              	.LVL20:
 337 0198 6FF01FF8 		j	.L9
 338              	.LVL21:
 339              	.L14:
 340              	.LBE26:
  77:src/riscv.cpp ****         printString("wooow\n");
 341              		.loc 1 77 9 is_stmt 1
  77:src/riscv.cpp ****         printString("wooow\n");
 342              		.loc 1 77 20 is_stmt 0
 343 019c 17050000 		lla	a0,.LC3
 343      13050500 
GAS LISTING /tmp/cctLyDEK.s 			page 13


 344 01a4 97000000 		call	_Z11printStringPKc@plt
 344      E7800000 
 345              	.LVL22:
  79:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 346              		.loc 1 79 9 is_stmt 1
 347              	.LBB27:
 348              	.LBB28:
 144:src/../h/riscv.hpp **** }
 349              		.loc 2 144 5
 144:src/../h/riscv.hpp **** }
 350              		.loc 2 144 64 is_stmt 0
 351 01ac 93072000 		li	a5,2
 352              	#APP
 353              	# 144 "src/../h/riscv.hpp" 1
 354              		csrc sip, a5
 355              	# 0 "" 2
 356              	.LVL23:
 357              	#NO_APP
 358              	.LBE28:
 359              	.LBE27:
  80:src/riscv.cpp ****         TCB::timeSliceCounter++;
 360              		.loc 1 80 9 is_stmt 1
  80:src/riscv.cpp ****         TCB::timeSliceCounter++;
 361              		.loc 1 80 30 is_stmt 0
 362 01b4 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 362      03370700 
 363 01bc 83370700 		ld	a5,0(a4)
 364 01c0 93871700 		addi	a5,a5,1
 365 01c4 2330F700 		sd	a5,0(a4)
  81:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 366              		.loc 1 81 9 is_stmt 1
  81:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 367              		.loc 1 81 26 is_stmt 0
 368 01c8 17070000 		la	a4,_ZN3TCB7runningE
 368      03370700 
 369 01d0 03370700 		ld	a4,0(a4)
  81:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 370              		.loc 1 81 37
 371 01d4 E30207F4 		beqz	a4,.L9
 372              	.LVL24:
 373              	.LBB29:
 374              	.LBB30:
 375              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
GAS LISTING /tmp/cctLyDEK.s 			page 14


  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  20:src/../h/tcb.hpp **** 
  21:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 376              		.loc 3 21 35 is_stmt 1 discriminator 1
 377              		.loc 3 21 42 is_stmt 0 discriminator 1
 378 01d8 03378702 		ld	a4,40(a4)
 379              	.LVL25:
 380              	.LBE30:
 381              	.LBE29:
  81:src/riscv.cpp ****         if (TCB::running != nullptr && TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 382              		.loc 1 81 37 discriminator 1
 383 01dc E3EEE7F2 		bltu	a5,a4,.L9
  83:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 384              		.loc 1 83 13 is_stmt 1
  83:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 385              		.loc 1 83 34 is_stmt 0
 386 01e0 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 386      83B70700 
 387 01e8 23B00700 		sd	zero,0(a5)
  84:src/riscv.cpp ****             TCB::dispatch();
 388              		.loc 1 84 13 is_stmt 1
  84:src/riscv.cpp ****             TCB::dispatch();
 389              		.loc 1 84 26 is_stmt 0
 390 01ec 97000000 		call	_ZN3TCB8dispatchEv@plt
 390      E7800000 
 391              	.LVL26:
 392 01f4 6FF05FF2 		j	.L9
 393              	.L15:
  90:src/riscv.cpp ****         console_handler();
 394              		.loc 1 90 9 is_stmt 1
  90:src/riscv.cpp ****         console_handler();
 395              		.loc 1 90 24 is_stmt 0
 396 01f8 97000000 		call	console_handler@plt
 396      E7800000 
 397              	.LVL27:
 398 0200 6FF09FF1 		j	.L9
 399              	.LBE35:
 400              		.cfi_endproc
 401              	.LFE34:
 403              	.Letext0:
 404              		.file 4 "src/../h/../lib/hw.h"
 405              		.file 5 "src/../h/syscall_c.hpp"
 406              		.file 6 "src/../h/print.hpp"
 407              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/cctLyDEK.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cctLyDEK.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cctLyDEK.s:13     .text:0000000000000000 .L0 
     /tmp/cctLyDEK.s:14     .text:0000000000000000 .L0 
     /tmp/cctLyDEK.s:15     .text:0000000000000004 .L0 
     /tmp/cctLyDEK.s:17     .text:0000000000000008 .L0 
     /tmp/cctLyDEK.s:19     .text:000000000000000c .L0 
     /tmp/cctLyDEK.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:13     .text:000000000000000c .L0 
     /tmp/cctLyDEK.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:14     .text:0000000000000010 .L0 
     /tmp/cctLyDEK.s:33     .text:0000000000000014 .L0 
     /tmp/cctLyDEK.s:34     .text:0000000000000018 .L0 
     /tmp/cctLyDEK.s:35     .text:0000000000000018 .L0 
     /tmp/cctLyDEK.s:37     .text:000000000000001c .L0 
     /tmp/cctLyDEK.s:39     .text:0000000000000020 .L0 
     /tmp/cctLyDEK.s:59     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cctLyDEK.s:62     .text:0000000000000020 .L0 
     /tmp/cctLyDEK.s:63     .text:0000000000000020 .L0 
     /tmp/cctLyDEK.s:64     .text:0000000000000024 .L0 
     /tmp/cctLyDEK.s:71     .text:000000000000003c .L0 
     /tmp/cctLyDEK.s:72     .text:000000000000003c .L0 
     /tmp/cctLyDEK.s:73     .text:000000000000003c .L0 
     /tmp/cctLyDEK.s:74     .text:000000000000003c .L0 
     /tmp/cctLyDEK.s:75     .text:000000000000003c .L0 
     /tmp/cctLyDEK.s:76     .text:000000000000003c .L0 
     /tmp/cctLyDEK.s:78     .text:0000000000000040 .L0 
     /tmp/cctLyDEK.s:83     .text:0000000000000040 .L0 
     /tmp/cctLyDEK.s:84     .text:0000000000000040 .L0 
     /tmp/cctLyDEK.s:85     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:104    .text:0000000000000040 .L0 
     /tmp/cctLyDEK.s:93     .text:0000000000000048 .L0 
     /tmp/cctLyDEK.s:94     .text:0000000000000048 .L0 
     /tmp/cctLyDEK.s:98     .text:000000000000004c .L0 
     /tmp/cctLyDEK.s:102    .text:0000000000000050 .L0 
     /tmp/cctLyDEK.s:103    .text:0000000000000050 .L0 
     /tmp/cctLyDEK.s:104    .text:0000000000000050 .L0 
  src/../h/riscv.hpp:172    .text:0000000000000050 .L0 
     /tmp/cctLyDEK.s:112    .text:0000000000000058 .L0 
     /tmp/cctLyDEK.s:113    .text:0000000000000058 .L0 
     /tmp/cctLyDEK.s:117    .text:000000000000005c .L0 
     /tmp/cctLyDEK.s:121    .text:0000000000000060 .L0 
     /tmp/cctLyDEK.s:122    .text:0000000000000060 .L0 
     /tmp/cctLyDEK.s:123    .text:0000000000000060 .L0 
  src/../h/riscv.hpp:92     .text:0000000000000060 .L0 
     /tmp/cctLyDEK.s:131    .text:0000000000000068 .L0 
     /tmp/cctLyDEK.s:132    .text:0000000000000068 .L0 
     /tmp/cctLyDEK.s:136    .text:000000000000006c .L0 
     /tmp/cctLyDEK.s:138    .text:0000000000000070 .L0 
     /tmp/cctLyDEK.s:139    .text:0000000000000070 .L0 
     /tmp/cctLyDEK.s:143    .text:000000000000007c .L0 
     /tmp/cctLyDEK.s:144    .text:000000000000007c .L0 
     /tmp/cctLyDEK.s:149    .text:000000000000008c .L0 
     /tmp/cctLyDEK.s:150    .text:000000000000008c .L0 
     /tmp/cctLyDEK.s:152    .text:0000000000000090 .L0 
     /tmp/cctLyDEK.s:155    .text:0000000000000098 .L0 
GAS LISTING /tmp/cctLyDEK.s 			page 16


     /tmp/cctLyDEK.s:157    .text:000000000000009c .L0 
     /tmp/cctLyDEK.s:160    .text:00000000000000a4 .L0 
     /tmp/cctLyDEK.s:161    .text:00000000000000a4 .L0 
     /tmp/cctLyDEK.s:163    .text:00000000000000a8 .L0 
     /tmp/cctLyDEK.s:168    .text:00000000000000b8 .L0 
     /tmp/cctLyDEK.s:169    .text:00000000000000b8 .L0 
     /tmp/cctLyDEK.s:171    .text:00000000000000bc .L0 
     /tmp/cctLyDEK.s:176    .text:00000000000000cc .L0 
     /tmp/cctLyDEK.s:177    .text:00000000000000cc .L0 
     /tmp/cctLyDEK.s:184    .text:00000000000000dc .L0 
     /tmp/cctLyDEK.s:185    .text:00000000000000dc .L0 
     /tmp/cctLyDEK.s:186    .text:00000000000000dc .L0 
     /tmp/cctLyDEK.s:187    .text:00000000000000dc .L0 
     /tmp/cctLyDEK.s:188    .text:00000000000000dc .L0 
       src/riscv.cpp:32     .text:00000000000000dc .L0 
     /tmp/cctLyDEK.s:195    .text:00000000000000e0 .L0 
       src/riscv.cpp:33     .text:00000000000000e0 .L0 
     /tmp/cctLyDEK.s:201    .text:00000000000000e4 .L0 
       src/riscv.cpp:34     .text:00000000000000e4 .L0 
     /tmp/cctLyDEK.s:207    .text:00000000000000e8 .L0 
       src/riscv.cpp:35     .text:00000000000000e8 .L0 
     /tmp/cctLyDEK.s:213    .text:00000000000000ec .L0 
     /tmp/cctLyDEK.s:215    .text:00000000000000ec .L0 
     /tmp/cctLyDEK.s:219    .text:00000000000000fc .L0 
     /tmp/cctLyDEK.s:220    .text:00000000000000fc .L0 
     /tmp/cctLyDEK.s:222    .text:0000000000000100 .L0 
     /tmp/cctLyDEK.s:224    .text:0000000000000104 .L0 
     /tmp/cctLyDEK.s:226    .text:0000000000000108 .L0 
     /tmp/cctLyDEK.s:227    .text:0000000000000108 .L0 
     /tmp/cctLyDEK.s:228    .text:0000000000000108 .L0 
     /tmp/cctLyDEK.s:231    .text:0000000000000110 .L0 
     /tmp/cctLyDEK.s:238    .text:0000000000000118 .L0 
     /tmp/cctLyDEK.s:239    .text:0000000000000118 .L0 
     /tmp/cctLyDEK.s:244    .text:000000000000011c .L0 
  src/../h/riscv.hpp:110    .text:000000000000011c .L0 
     /tmp/cctLyDEK.s:254    .text:0000000000000120 .L0 
     /tmp/cctLyDEK.s:255    .text:0000000000000120 .L0 
     /tmp/cctLyDEK.s:260    .text:0000000000000124 .L0 
  src/../h/riscv.hpp:178    .text:0000000000000124 .L0 
     /tmp/cctLyDEK.s:270    .text:0000000000000128 .L0 
     /tmp/cctLyDEK.s:271    .text:000000000000012c .L0 
     /tmp/cctLyDEK.s:272    .text:000000000000012c .L0 
     /tmp/cctLyDEK.s:274    .text:0000000000000130 .L0 
     /tmp/cctLyDEK.s:275    .text:0000000000000130 .L0 
     /tmp/cctLyDEK.s:277    .text:0000000000000134 .L0 
     /tmp/cctLyDEK.s:279    .text:0000000000000138 .L0 
     /tmp/cctLyDEK.s:281    .text:000000000000013c .L0 
     /tmp/cctLyDEK.s:283    .text:0000000000000140 .L0 
     /tmp/cctLyDEK.s:285    .text:0000000000000144 .L0 
     /tmp/cctLyDEK.s:289    .text:0000000000000148 .L0 
     /tmp/cctLyDEK.s:293    .text:0000000000000148 .L0 
     /tmp/cctLyDEK.s:294    .text:0000000000000148 .L0 
     /tmp/cctLyDEK.s:298    .text:0000000000000158 .L0 
     /tmp/cctLyDEK.s:299    .text:0000000000000158 .L0 
     /tmp/cctLyDEK.s:301    .text:000000000000015c .L0 
     /tmp/cctLyDEK.s:305    .text:0000000000000160 .L0 
       src/riscv.cpp:56     .text:0000000000000160 .L0 
GAS LISTING /tmp/cctLyDEK.s 			page 17


     /tmp/cctLyDEK.s:315    .text:0000000000000168 .L0 
     /tmp/cctLyDEK.s:316    .text:0000000000000168 .L0 
     /tmp/cctLyDEK.s:321    .text:0000000000000178 .L0 
     /tmp/cctLyDEK.s:324    .text:000000000000017c .L0 
     /tmp/cctLyDEK.s:325    .text:000000000000017c .L0 
     /tmp/cctLyDEK.s:330    .text:0000000000000184 .L0 
     /tmp/cctLyDEK.s:331    .text:0000000000000184 .L0 
     /tmp/cctLyDEK.s:334    .text:0000000000000190 .L0 
     /tmp/cctLyDEK.s:335    .text:0000000000000190 .L0 
     /tmp/cctLyDEK.s:342    .text:000000000000019c .L0 
     /tmp/cctLyDEK.s:343    .text:000000000000019c .L0 
     /tmp/cctLyDEK.s:349    .text:00000000000001ac .L0 
     /tmp/cctLyDEK.s:350    .text:00000000000001ac .L0 
     /tmp/cctLyDEK.s:351    .text:00000000000001ac .L0 
     /tmp/cctLyDEK.s:361    .text:00000000000001b4 .L0 
     /tmp/cctLyDEK.s:362    .text:00000000000001b4 .L0 
     /tmp/cctLyDEK.s:367    .text:00000000000001c8 .L0 
     /tmp/cctLyDEK.s:368    .text:00000000000001c8 .L0 
     /tmp/cctLyDEK.s:371    .text:00000000000001d4 .L0 
     /tmp/cctLyDEK.s:377    .text:00000000000001d8 .L0 
     /tmp/cctLyDEK.s:378    .text:00000000000001d8 .L0 
     /tmp/cctLyDEK.s:383    .text:00000000000001dc .L0 
     /tmp/cctLyDEK.s:385    .text:00000000000001e0 .L0 
     /tmp/cctLyDEK.s:386    .text:00000000000001e0 .L0 
     /tmp/cctLyDEK.s:389    .text:00000000000001ec .L0 
     /tmp/cctLyDEK.s:390    .text:00000000000001ec .L0 
     /tmp/cctLyDEK.s:395    .text:00000000000001f8 .L0 
     /tmp/cctLyDEK.s:396    .text:00000000000001f8 .L0 
     /tmp/cctLyDEK.s:400    .text:0000000000000204 .L0 
     /tmp/cctLyDEK.s:408    .text:0000000000000204 .L0 
     /tmp/cctLyDEK.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cctLyDEK.s:144    .text:000000000000007c .L0 
     /tmp/cctLyDEK.s:47     .rodata.str1.8:0000000000000008 .LC1
     /tmp/cctLyDEK.s:215    .text:00000000000000ec .L0 
     /tmp/cctLyDEK.s:50     .rodata.str1.8:0000000000000010 .LC2
     /tmp/cctLyDEK.s:294    .text:0000000000000148 .L0 
     /tmp/cctLyDEK.s:331    .text:0000000000000184 .L0 
     /tmp/cctLyDEK.s:53     .rodata.str1.8:0000000000000028 .LC3
     /tmp/cctLyDEK.s:343    .text:000000000000019c .L0 
     /tmp/cctLyDEK.s:362    .text:00000000000001b4 .L0 
     /tmp/cctLyDEK.s:368    .text:00000000000001c8 .L0 
     /tmp/cctLyDEK.s:386    .text:00000000000001e0 .L0 
     /tmp/cctLyDEK.s:181    .text:00000000000000dc .L4
     /tmp/cctLyDEK.s:339    .text:000000000000019c .L14
     /tmp/cctLyDEK.s:393    .text:00000000000001f8 .L15
     /tmp/cctLyDEK.s:234    .text:0000000000000118 .L9
     /tmp/cctLyDEK.s:288    .text:0000000000000148 .L16
     /tmp/cctLyDEK.s:328    .text:0000000000000184 .L17
     /tmp/cctLyDEK.s:313    .text:0000000000000168 .L18
     /tmp/cctLyDEK.s:302    .text:0000000000000160 .L8
     /tmp/cctLyDEK.s:1412   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cctLyDEK.s:2575   .debug_str:0000000000000559 .LASF104
     /tmp/cctLyDEK.s:2527   .debug_str:00000000000003fe .LASF105
     /tmp/cctLyDEK.s:2441   .debug_str:00000000000001b9 .LASF106
     /tmp/cctLyDEK.s:5      .text:0000000000000000 .Ltext0
     /tmp/cctLyDEK.s:403    .text:0000000000000204 .Letext0
     /tmp/cctLyDEK.s:2373   .debug_line:0000000000000000 .Ldebug_line0
GAS LISTING /tmp/cctLyDEK.s 			page 18


     /tmp/cctLyDEK.s:2507   .debug_str:0000000000000392 .LASF0
     /tmp/cctLyDEK.s:2523   .debug_str:00000000000003d8 .LASF1
     /tmp/cctLyDEK.s:2493   .debug_str:0000000000000329 .LASF2
     /tmp/cctLyDEK.s:2421   .debug_str:0000000000000128 .LASF3
     /tmp/cctLyDEK.s:2469   .debug_str:0000000000000299 .LASF4
     /tmp/cctLyDEK.s:2555   .debug_str:00000000000004cc .LASF5
     /tmp/cctLyDEK.s:2401   .debug_str:000000000000008e .LASF6
     /tmp/cctLyDEK.s:2525   .debug_str:00000000000003eb .LASF7
     /tmp/cctLyDEK.s:2505   .debug_str:000000000000037f .LASF8
     /tmp/cctLyDEK.s:2581   .debug_str:000000000000063e .LASF9
     /tmp/cctLyDEK.s:2457   .debug_str:000000000000021e .LASF10
     /tmp/cctLyDEK.s:2535   .debug_str:000000000000044b .LASF11
     /tmp/cctLyDEK.s:2577   .debug_str:000000000000061d .LASF12
     /tmp/cctLyDEK.s:2403   .debug_str:0000000000000095 .LASF13
     /tmp/cctLyDEK.s:2381   .debug_str:0000000000000027 .LASF14
     /tmp/cctLyDEK.s:2411   .debug_str:00000000000000df .LASF15
     /tmp/cctLyDEK.s:2549   .debug_str:0000000000000498 .LASF16
     /tmp/cctLyDEK.s:2417   .debug_str:00000000000000fe .LASF17
     /tmp/cctLyDEK.s:2519   .debug_str:00000000000003c7 .LASF57
     /tmp/cctLyDEK.s:2481   .debug_str:00000000000002e1 .LASF107
     /tmp/cctLyDEK.s:2563   .debug_str:0000000000000505 .LASF18
     /tmp/cctLyDEK.s:2517   .debug_str:00000000000003be .LASF19
     /tmp/cctLyDEK.s:2475   .debug_str:00000000000002ae .LASF20
     /tmp/cctLyDEK.s:2545   .debug_str:0000000000000486 .LASF53
     /tmp/cctLyDEK.s:2595   .debug_str:00000000000006ad .LASF55
     /tmp/cctLyDEK.s:2383   .debug_str:0000000000000037 .LASF21
     /tmp/cctLyDEK.s:2433   .debug_str:0000000000000178 .LASF23
     /tmp/cctLyDEK.s:2429   .debug_str:0000000000000167 .LASF25
     /tmp/cctLyDEK.s:2427   .debug_str:0000000000000152 .LASF27
     /tmp/cctLyDEK.s:2559   .debug_str:00000000000004ef .LASF22
     /tmp/cctLyDEK.s:2537   .debug_str:000000000000045a .LASF24
     /tmp/cctLyDEK.s:2573   .debug_str:0000000000000552 .LASF26
     /tmp/cctLyDEK.s:2569   .debug_str:000000000000052d .LASF28
     /tmp/cctLyDEK.s:2445   .debug_str:00000000000001ea .LASF29
     /tmp/cctLyDEK.s:2419   .debug_str:0000000000000114 .LASF30
     /tmp/cctLyDEK.s:2377   .debug_str:0000000000000009 .LASF31
     /tmp/cctLyDEK.s:2461   .debug_str:0000000000000242 .LASF32
     /tmp/cctLyDEK.s:2399   .debug_str:0000000000000086 .LASF33
     /tmp/cctLyDEK.s:2405   .debug_str:00000000000000a5 .LASF34
     /tmp/cctLyDEK.s:2599   .debug_str:00000000000006d0 .LASF35
     /tmp/cctLyDEK.s:2435   .debug_str:000000000000018d .LASF36
     /tmp/cctLyDEK.s:2509   .debug_str:000000000000039f .LASF37
     /tmp/cctLyDEK.s:2591   .debug_str:0000000000000695 .LASF38
     /tmp/cctLyDEK.s:2395   .debug_str:0000000000000066 .LASF39
     /tmp/cctLyDEK.s:2443   .debug_str:00000000000001d7 .LASF40
     /tmp/cctLyDEK.s:2453   .debug_str:0000000000000201 .LASF41
     /tmp/cctLyDEK.s:2571   .debug_str:0000000000000540 .LASF42
     /tmp/cctLyDEK.s:2391   .debug_str:000000000000005b .LASF43
     /tmp/cctLyDEK.s:2605   .debug_str:00000000000006f4 .LASF44
     /tmp/cctLyDEK.s:2597   .debug_str:00000000000006c5 .LASF45
     /tmp/cctLyDEK.s:2553   .debug_str:00000000000004b4 .LASF46
     /tmp/cctLyDEK.s:2521   .debug_str:00000000000003cd .LASF47
     /tmp/cctLyDEK.s:2565   .debug_str:000000000000050e .LASF48
     /tmp/cctLyDEK.s:2409   .debug_str:00000000000000d5 .LASF49
     /tmp/cctLyDEK.s:2465   .debug_str:000000000000025b .LASF50
     /tmp/cctLyDEK.s:2497   .debug_str:0000000000000343 .LASF51
     /tmp/cctLyDEK.s:2459   .debug_str:000000000000022c .LASF52
GAS LISTING /tmp/cctLyDEK.s 			page 19


     /tmp/cctLyDEK.s:2561   .debug_str:00000000000004f6 .LASF54
     /tmp/cctLyDEK.s:2407   .debug_str:00000000000000b9 .LASF56
     /tmp/cctLyDEK.s:2583   .debug_str:000000000000064e .LASF75
     /tmp/cctLyDEK.s:2479   .debug_str:00000000000002bf .LASF77
     /tmp/cctLyDEK.s:2389   .debug_str:0000000000000053 .LASF108
     /tmp/cctLyDEK.s:2463   .debug_str:0000000000000256 .LASF58
     /tmp/cctLyDEK.s:2539   .debug_str:000000000000046d .LASF60
     /tmp/cctLyDEK.s:2529   .debug_str:000000000000040c .LASF62
     /tmp/cctLyDEK.s:2455   .debug_str:0000000000000207 .LASF64
     /tmp/cctLyDEK.s:2495   .debug_str:0000000000000337 .LASF59
     /tmp/cctLyDEK.s:2601   .debug_str:00000000000006d8 .LASF61
     /tmp/cctLyDEK.s:2489   .debug_str:000000000000030e .LASF63
     /tmp/cctLyDEK.s:2397   .debug_str:000000000000006d .LASF65
     /tmp/cctLyDEK.s:2415   .debug_str:00000000000000f1 .LASF66
     /tmp/cctLyDEK.s:2531   .debug_str:0000000000000417 .LASF67
     /tmp/cctLyDEK.s:2543   .debug_str:0000000000000481 .LASF109
     /tmp/cctLyDEK.s:2551   .debug_str:00000000000004ae .LASF68
     /tmp/cctLyDEK.s:2499   .debug_str:000000000000034d .LASF69
     /tmp/cctLyDEK.s:2431   .debug_str:0000000000000170 .LASF110
     /tmp/cctLyDEK.s:2503   .debug_str:000000000000036a .LASF111
     /tmp/cctLyDEK.s:2473   .debug_str:00000000000002a9 .LASF70
     /tmp/cctLyDEK.s:2413   .debug_str:00000000000000eb .LASF71
     /tmp/cctLyDEK.s:2477   .debug_str:00000000000002b7 .LASF72
     /tmp/cctLyDEK.s:2515   .debug_str:00000000000003b4 .LASF73
     /tmp/cctLyDEK.s:2471   .debug_str:00000000000002a0 .LASF74
     /tmp/cctLyDEK.s:2491   .debug_str:000000000000031b .LASF76
     /tmp/cctLyDEK.s:2587   .debug_str:0000000000000671 .LASF78
     /tmp/cctLyDEK.s:2585   .debug_str:0000000000000663 .LASF112
     /tmp/cctLyDEK.s:2467   .debug_str:0000000000000271 .LASF113
     /tmp/cctLyDEK.s:2511   .debug_str:00000000000003a6 .LASF79
     /tmp/cctLyDEK.s:2437   .debug_str:00000000000001a1 .LASF80
     /tmp/cctLyDEK.s:2557   .debug_str:00000000000004de .LASF114
     /tmp/cctLyDEK.s:2483   .debug_str:00000000000002ec .LASF81
     /tmp/cctLyDEK.s:2589   .debug_str:000000000000068a .LASF82
     /tmp/cctLyDEK.s:2439   .debug_str:00000000000001b4 .LASF83
     /tmp/cctLyDEK.s:2533   .debug_str:0000000000000437 .LASF84
     /tmp/cctLyDEK.s:2485   .debug_str:00000000000002f7 .LASF85
     /tmp/cctLyDEK.s:2379   .debug_str:0000000000000011 .LASF86
     /tmp/cctLyDEK.s:2375   .debug_str:0000000000000000 .LASF87
     /tmp/cctLyDEK.s:60     .text:0000000000000020 .LFB34
     /tmp/cctLyDEK.s:401    .text:0000000000000204 .LFE34
     /tmp/cctLyDEK.s:2513   .debug_str:00000000000003af .LASF88
     /tmp/cctLyDEK.s:2541   .debug_str:0000000000000479 .LASF89
     /tmp/cctLyDEK.s:2385   .debug_str:0000000000000040 .LASF90
     /tmp/cctLyDEK.s:2365   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cctLyDEK.s:2393   .debug_str:0000000000000061 .LASF91
     /tmp/cctLyDEK.s:2260   .debug_loc:0000000000000000 .LLST0
     /tmp/cctLyDEK.s:2447   .debug_str:00000000000001f2 .LASF92
     /tmp/cctLyDEK.s:2271   .debug_loc:0000000000000036 .LLST1
     /tmp/cctLyDEK.s:2449   .debug_str:00000000000001f7 .LASF93
     /tmp/cctLyDEK.s:2282   .debug_loc:000000000000006c .LLST2
     /tmp/cctLyDEK.s:2451   .debug_str:00000000000001fc .LASF94
     /tmp/cctLyDEK.s:2293   .debug_loc:00000000000000a2 .LLST3
     /tmp/cctLyDEK.s:2487   .debug_str:0000000000000309 .LASF95
     /tmp/cctLyDEK.s:2304   .debug_loc:00000000000000d8 .LLST4
     /tmp/cctLyDEK.s:2567   .debug_str:0000000000000526 .LASF96
     /tmp/cctLyDEK.s:2316   .debug_loc:000000000000010f .LLST5
GAS LISTING /tmp/cctLyDEK.s 			page 20


     /tmp/cctLyDEK.s:217    .text:00000000000000fc .LVL7
     /tmp/cctLyDEK.s:296    .text:0000000000000158 .LVL14
     /tmp/cctLyDEK.s:319    .text:0000000000000178 .LVL17
     /tmp/cctLyDEK.s:336    .text:0000000000000198 .LVL20
     /tmp/cctLyDEK.s:80     .text:0000000000000040 .LBB18
     /tmp/cctLyDEK.s:96     .text:000000000000004c .LBE18
     /tmp/cctLyDEK.s:100    .text:0000000000000050 .LBB20
     /tmp/cctLyDEK.s:115    .text:000000000000005c .LBE20
     /tmp/cctLyDEK.s:119    .text:0000000000000060 .LBB22
     /tmp/cctLyDEK.s:134    .text:000000000000006c .LBE22
     /tmp/cctLyDEK.s:347    .text:00000000000001ac .LBB27
     /tmp/cctLyDEK.s:359    .text:00000000000001b4 .LBE27
     /tmp/cctLyDEK.s:2323   .debug_loc:0000000000000132 .LLST6
     /tmp/cctLyDEK.s:373    .text:00000000000001d8 .LBB29
     /tmp/cctLyDEK.s:381    .text:00000000000001dc .LBE29
     /tmp/cctLyDEK.s:2331   .debug_loc:0000000000000156 .LLST7
     /tmp/cctLyDEK.s:241    .text:000000000000011c .LBB31
     /tmp/cctLyDEK.s:252    .text:0000000000000120 .LBE31
     /tmp/cctLyDEK.s:2338   .debug_loc:0000000000000179 .LLST8
     /tmp/cctLyDEK.s:257    .text:0000000000000124 .LBB33
     /tmp/cctLyDEK.s:268    .text:0000000000000128 .LBE33
     /tmp/cctLyDEK.s:2345   .debug_loc:000000000000019c .LLST9
     /tmp/cctLyDEK.s:141    .text:000000000000007c .LVL0
     /tmp/cctLyDEK.s:146    .text:000000000000008c .LVL1
     /tmp/cctLyDEK.s:179    .text:00000000000000d8 .LVL2
     /tmp/cctLyDEK.s:345    .text:00000000000001ac .LVL22
     /tmp/cctLyDEK.s:391    .text:00000000000001f4 .LVL26
     /tmp/cctLyDEK.s:397    .text:0000000000000200 .LVL27
     /tmp/cctLyDEK.s:10     .text:0000000000000000 .LFB33
     /tmp/cctLyDEK.s:40     .text:0000000000000020 .LFE33
     /tmp/cctLyDEK.s:2593   .debug_str:00000000000006a8 .LASF115
     /tmp/cctLyDEK.s:2603   .debug_str:00000000000006ef .LASF97
     /tmp/cctLyDEK.s:2423   .debug_str:000000000000012f .LASF98
     /tmp/cctLyDEK.s:2387   .debug_str:0000000000000047 .LASF100
     /tmp/cctLyDEK.s:2579   .debug_str:000000000000062c .LASF99
     /tmp/cctLyDEK.s:2501   .debug_str:000000000000035d .LASF101
     /tmp/cctLyDEK.s:2547   .debug_str:0000000000000491 .LASF102
     /tmp/cctLyDEK.s:2425   .debug_str:0000000000000142 .LASF103
     /tmp/cctLyDEK.s:193    .text:00000000000000e0 .LVL3
     /tmp/cctLyDEK.s:233    .text:0000000000000118 .LVL8
     /tmp/cctLyDEK.s:287    .text:0000000000000148 .LVL13
     /tmp/cctLyDEK.s:338    .text:000000000000019c .LVL21
     /tmp/cctLyDEK.s:199    .text:00000000000000e4 .LVL4
     /tmp/cctLyDEK.s:205    .text:00000000000000e8 .LVL5
     /tmp/cctLyDEK.s:211    .text:00000000000000ec .LVL6
     /tmp/cctLyDEK.s:303    .text:0000000000000160 .LVL15
     /tmp/cctLyDEK.s:312    .text:0000000000000168 .LVL16
     /tmp/cctLyDEK.s:323    .text:000000000000017c .LVL18
     /tmp/cctLyDEK.s:327    .text:0000000000000184 .LVL19
     /tmp/cctLyDEK.s:356    .text:00000000000001b4 .LVL23
     /tmp/cctLyDEK.s:372    .text:00000000000001d8 .LVL24
     /tmp/cctLyDEK.s:379    .text:00000000000001dc .LVL25
     /tmp/cctLyDEK.s:240    .text:000000000000011c .LVL9
     /tmp/cctLyDEK.s:249    .text:0000000000000120 .LVL10
     /tmp/cctLyDEK.s:256    .text:0000000000000124 .LVL11
     /tmp/cctLyDEK.s:265    .text:0000000000000128 .LVL12
     /tmp/cctLyDEK.s:409    .debug_info:0000000000000000 .Ldebug_info0
GAS LISTING /tmp/cctLyDEK.s 			page 21


     /tmp/cctLyDEK.s:182    .text:00000000000000dc .LBB25
     /tmp/cctLyDEK.s:235    .text:0000000000000118 .LBE25
     /tmp/cctLyDEK.s:291    .text:0000000000000148 .LBB26
     /tmp/cctLyDEK.s:340    .text:000000000000019c .LBE26

UNDEFINED SYMBOLS
_Z12printIntegerm
_Z11printStringPKc
__putc
_ZN3TCB12createThreadEPFvPvES0_
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB7runningE
console_handler
