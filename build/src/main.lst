GAS LISTING /tmp/cclNUaoZ.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadB created\n"
  12      61644220 
  12      63726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 54687265 		.string	"ThreadC created\n"
  15      61644320 
  15      63726561 
  15      7465640A 
  15      00
  16 0041 00000000 		.align	3
  16      000000
  17              	.LC3:
  18 0048 54687265 		.string	"ThreadD created\n"
  18      61644420 
  18      63726561 
  18      7465640A 
  18      00
  19 0059 00000000 		.align	3
  19      000000
  20              	.LC4:
  21 0060 46696E69 		.string	"Finished\n"
  21      73686564 
  21      0A00
  22              		.text
  23              		.align	2
  24              		.globl	main
  26              	main:
  27              	.LFB33:
  28              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by marko on 20.4.22..
   3:src/main.cpp  **** //
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "../h/tcb.hpp"
   6:src/main.cpp  **** #include "../h/workers.hpp"
   7:src/main.cpp  **** #include "../h/print.hpp"
   8:src/main.cpp  **** #include "../h/riscv.hpp"
GAS LISTING /tmp/cclNUaoZ.s 			page 2


   9:src/main.cpp  **** #include "../h/syscall_c.hpp"
  10:src/main.cpp  **** int main()
  11:src/main.cpp  **** {
  29              		.loc 1 11 1
  30              		.cfi_startproc
  31 0000 130101FB 		addi	sp,sp,-80
  32              		.cfi_def_cfa_offset 80
  33 0004 23341104 		sd	ra,72(sp)
  34 0008 23308104 		sd	s0,64(sp)
  35 000c 233C9102 		sd	s1,56(sp)
  36 0010 23382103 		sd	s2,48(sp)
  37              		.cfi_offset 1, -8
  38              		.cfi_offset 8, -16
  39              		.cfi_offset 9, -24
  40              		.cfi_offset 18, -32
  41 0014 13040105 		addi	s0,sp,80
  42              		.cfi_def_cfa 8, 0
  12:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  43              		.loc 1 12 5
  44              		.loc 1 12 19 is_stmt 0
  45 0018 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  45      83B70700 
  46              	.LVL0:
  47              	.LBB18:
  48              	.LBB19:
  49              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non-inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cclNUaoZ.s 			page 3


  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cclNUaoZ.s 			page 4


  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  93:src/../h/riscv.hpp ****     return scause;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105:src/../h/riscv.hpp ****     return sepc;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  50              		.loc 2 122 5 is_stmt 1
  51              		.loc 2 122 69 is_stmt 0
  52              	#APP
  53              	# 122 "src/../h/riscv.hpp" 1
 123              	}
  54              		csrw stvec, a5
  55              	# 0 "" 2
  56              	.LVL1:
  57              	#NO_APP
  58              	.LBE19:
  59              	.LBE18:
  13:src/main.cpp  **** 
  14:src/main.cpp  ****     TCB *threads[5];
  60              		.loc 1 14 5 is_stmt 1
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     thread_create(&threads[0], nullptr, nullptr);
  61              		.loc 1 16 5
  62              		.loc 1 16 18 is_stmt 0
  63 0024 13060000 		li	a2,0
  64 0028 93050000 		li	a1,0
  65 002c 130584FB 		addi	a0,s0,-72
  66 0030 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  66      E7800000 
GAS LISTING /tmp/cclNUaoZ.s 			page 5


  67              	.LVL2:
  17:src/main.cpp  ****     TCB::running = threads[0];
  68              		.loc 1 17 5 is_stmt 1
  69              		.loc 1 17 18 is_stmt 0
  70 0038 033784FB 		ld	a4,-72(s0)
  71 003c 97070000 		la	a5,_ZN3TCB7runningE
  71      83B70700 
  72 0044 23B0E700 		sd	a4,0(a5)
  18:src/main.cpp  **** 
  19:src/main.cpp  ****     thread_create(&threads[1], reinterpret_cast<void (*)(void *)>(workerBodyA), nullptr);
  73              		.loc 1 19 5 is_stmt 1
  74              		.loc 1 19 18 is_stmt 0
  75 0048 13060000 		li	a2,0
  76 004c 97050000 		la	a1,_Z11workerBodyAv
  76      83B50500 
  77 0054 130504FC 		addi	a0,s0,-64
  78 0058 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  78      E7800000 
  79              	.LVL3:
  20:src/main.cpp  ****     printString("ThreadA created\n");
  80              		.loc 1 20 5 is_stmt 1
  81              		.loc 1 20 16 is_stmt 0
  82 0060 17050000 		lla	a0,.LC0
  82      13050500 
  83 0068 97000000 		call	_Z11printStringPKc@plt
  83      E7800000 
  84              	.LVL4:
  21:src/main.cpp  ****     thread_create(&threads[2], reinterpret_cast<void (*)(void *)>(workerBodyB), nullptr);
  85              		.loc 1 21 5 is_stmt 1
  86              		.loc 1 21 18 is_stmt 0
  87 0070 13060000 		li	a2,0
  88 0074 97050000 		la	a1,_Z11workerBodyBv
  88      83B50500 
  89 007c 130584FC 		addi	a0,s0,-56
  90 0080 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  90      E7800000 
  91              	.LVL5:
  22:src/main.cpp  ****     printString("ThreadB created\n");
  92              		.loc 1 22 5 is_stmt 1
  93              		.loc 1 22 16 is_stmt 0
  94 0088 17050000 		lla	a0,.LC1
  94      13050500 
  95 0090 97000000 		call	_Z11printStringPKc@plt
  95      E7800000 
  96              	.LVL6:
  23:src/main.cpp  ****     thread_create(&threads[3], reinterpret_cast<void (*)(void *)>(workerBodyC), nullptr);
  97              		.loc 1 23 5 is_stmt 1
  98              		.loc 1 23 18 is_stmt 0
  99 0098 13060000 		li	a2,0
 100 009c 97050000 		la	a1,_Z11workerBodyCv
 100      83B50500 
 101 00a4 130504FD 		addi	a0,s0,-48
 102 00a8 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 102      E7800000 
 103              	.LVL7:
  24:src/main.cpp  ****     printString("ThreadC created\n");
 104              		.loc 1 24 5 is_stmt 1
GAS LISTING /tmp/cclNUaoZ.s 			page 6


 105              		.loc 1 24 16 is_stmt 0
 106 00b0 17050000 		lla	a0,.LC2
 106      13050500 
 107 00b8 97000000 		call	_Z11printStringPKc@plt
 107      E7800000 
 108              	.LVL8:
  25:src/main.cpp  ****     thread_create(&threads[4], reinterpret_cast<void (*)(void *)>(workerBodyD), nullptr);
 109              		.loc 1 25 5 is_stmt 1
 110              		.loc 1 25 18 is_stmt 0
 111 00c0 13060000 		li	a2,0
 112 00c4 97050000 		la	a1,_Z11workerBodyDv
 112      83B50500 
 113 00cc 130584FD 		addi	a0,s0,-40
 114 00d0 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 114      E7800000 
 115              	.LVL9:
  26:src/main.cpp  ****     printString("ThreadD created\n");
 116              		.loc 1 26 5 is_stmt 1
 117              		.loc 1 26 16 is_stmt 0
 118 00d8 17050000 		lla	a0,.LC3
 118      13050500 
 119 00e0 97000000 		call	_Z11printStringPKc@plt
 119      E7800000 
 120              	.LVL10:
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 121              		.loc 1 28 5 is_stmt 1
 122              	.LBB20:
 123              	.LBB21:
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
GAS LISTING /tmp/cclNUaoZ.s 			page 7


 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 124              		.loc 2 161 5
 125              		.loc 2 161 68 is_stmt 0
 126 00e8 93072000 		li	a5,2
 127              	#APP
 128              	# 161 "src/../h/riscv.hpp" 1
 162              	}
 129              		csrs sstatus, a5
 130              	# 0 "" 2
 131              		.loc 2 162 1
 132              	#NO_APP
 133 00f0 6F00C000 		j	.L4
 134              	.LVL11:
 135              	.L2:
 136              	.LBE21:
 137              	.LBE20:
  29:src/main.cpp  **** 
  30:src/main.cpp  **** 
  31:src/main.cpp  ****     while (!(threads[1]->isFinished() &&
  32:src/main.cpp  ****              threads[2]->isFinished() &&
  33:src/main.cpp  ****              threads[3]->isFinished() &&
  34:src/main.cpp  ****              threads[4]->isFinished()))
  35:src/main.cpp  ****     {
  36:src/main.cpp  ****         thread_dispatch();
 138              		.loc 1 36 9 is_stmt 1 discriminator 3
 139              		.loc 1 36 24 is_stmt 0 discriminator 3
 140 00f4 97000000 		call	_Z15thread_dispatchv@plt
 140      E7800000 
 141              	.LVL12:
 142              	.L4:
  31:src/main.cpp  ****              threads[2]->isFinished() &&
 143              		.loc 1 31 5 is_stmt 1
  31:src/main.cpp  ****              threads[2]->isFinished() &&
 144              		.loc 1 31 12
  31:src/main.cpp  ****              threads[2]->isFinished() &&
 145              		.loc 1 31 23 is_stmt 0
 146 00fc 833704FC 		ld	a5,-64(s0)
 147              	.LVL13:
 148              	.LBB22:
 149              	.LBB23:
 150              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
GAS LISTING /tmp/cclNUaoZ.s 			page 8


   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** 
  11:src/../h/tcb.hpp **** // Thread Control Block
  12:src/../h/tcb.hpp **** class TCB
  13:src/../h/tcb.hpp **** {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 151              		.loc 3 17 31 is_stmt 1
 152              		.loc 3 17 38 is_stmt 0
 153 0100 83C70703 		lbu	a5,48(a5)
 154              	.LVL14:
 155              	.LBE23:
 156              	.LBE22:
  31:src/main.cpp  ****              threads[2]->isFinished() &&
 157              		.loc 1 31 12
 158 0104 E38807FE 		beqz	a5,.L2
  32:src/main.cpp  ****              threads[3]->isFinished() &&
 159              		.loc 1 32 23 discriminator 2
 160 0108 833784FC 		ld	a5,-56(s0)
 161              	.LVL15:
 162              	.LBB24:
 163              	.LBB25:
 164              		.loc 3 17 31 is_stmt 1 discriminator 2
 165              		.loc 3 17 38 is_stmt 0 discriminator 2
 166 010c 83C70703 		lbu	a5,48(a5)
 167              	.LVL16:
 168              	.LBE25:
 169              	.LBE24:
  31:src/main.cpp  ****              threads[2]->isFinished() &&
 170              		.loc 1 31 39 discriminator 2
 171 0110 E38207FE 		beqz	a5,.L2
  33:src/main.cpp  ****              threads[4]->isFinished()))
 172              		.loc 1 33 23
 173 0114 833704FD 		ld	a5,-48(s0)
 174              	.LVL17:
 175              	.LBB26:
 176              	.LBB27:
 177              		.loc 3 17 31 is_stmt 1
 178              		.loc 3 17 38 is_stmt 0
 179 0118 83C70703 		lbu	a5,48(a5)
 180              	.LVL18:
 181              	.LBE27:
 182              	.LBE26:
  32:src/main.cpp  ****              threads[3]->isFinished() &&
 183              		.loc 1 32 39
 184 011c E38C07FC 		beqz	a5,.L2
  34:src/main.cpp  ****     {
 185              		.loc 1 34 23 discriminator 4
 186 0120 833784FD 		ld	a5,-40(s0)
 187              	.LVL19:
 188              	.LBB28:
 189              	.LBB29:
 190              		.loc 3 17 31 is_stmt 1 discriminator 4
 191              		.loc 3 17 38 is_stmt 0 discriminator 4
GAS LISTING /tmp/cclNUaoZ.s 			page 9


 192 0124 83C70703 		lbu	a5,48(a5)
 193              	.LVL20:
 194              	.LBE29:
 195              	.LBE28:
  31:src/main.cpp  ****              threads[2]->isFinished() &&
 196              		.loc 1 31 12 discriminator 4
 197 0128 E38607FC 		beqz	a5,.L2
 198 012c 930484FB 		addi	s1,s0,-72
 199 0130 6F004001 		j	.L3
 200              	.LVL21:
 201              	.L7:
 202              	.LBB30:
  37:src/main.cpp  ****     }
  38:src/main.cpp  **** 
  39:src/main.cpp  ****     for (auto &thread: threads)
  40:src/main.cpp  ****     {
  41:src/main.cpp  ****         delete thread;
 203              		.loc 1 41 16
 204 0134 13050900 		mv	a0,s2
 205 0138 97000000 		call	_ZdlPv@plt
 205      E7800000 
 206              	.LVL22:
 207              	.L6:
  39:src/main.cpp  ****     {
 208              		.loc 1 39 5 is_stmt 1 discriminator 3
 209 0140 93848400 		addi	s1,s1,8
 210              	.LVL23:
 211              	.L3:
  39:src/main.cpp  ****     {
 212              		.loc 1 39 24 discriminator 1
 213 0144 930704FE 		addi	a5,s0,-32
 214 0148 6380F402 		beq	s1,a5,.L5
 215              	.LVL24:
 216              		.loc 1 41 9 discriminator 2
 217              		.loc 1 41 16 is_stmt 0 discriminator 2
 218 014c 03B90400 		ld	s2,0(s1)
 219              		.loc 1 41 22 discriminator 2
 220 0150 E30809FE 		beqz	s2,.L6
 221              	.LVL25:
 222              	.LBB31:
 223              	.LBB32:
  15:src/../h/tcb.hpp **** 
 224              		.loc 3 15 14 is_stmt 1
  15:src/../h/tcb.hpp **** 
 225              		.loc 3 15 23 is_stmt 0
 226 0154 03350901 		ld	a0,16(s2)
  15:src/../h/tcb.hpp **** 
 227              		.loc 3 15 28
 228 0158 E30E05FC 		beqz	a0,.L7
  15:src/../h/tcb.hpp **** 
 229              		.loc 3 15 23
 230 015c 97000000 		call	_ZdaPv@plt
 230      E7800000 
 231              	.LVL26:
 232 0164 6FF01FFD 		j	.L7
 233              	.LVL27:
 234              	.L5:
GAS LISTING /tmp/cclNUaoZ.s 			page 10


 235              	.LBE32:
 236              	.LBE31:
 237              	.LBE30:
  42:src/main.cpp  ****     }
  43:src/main.cpp  ****     printString("Finished\n");
 238              		.loc 1 43 5 is_stmt 1
 239              		.loc 1 43 16 is_stmt 0
 240 0168 17050000 		lla	a0,.LC4
 240      13050500 
 241 0170 97000000 		call	_Z11printStringPKc@plt
 241      E7800000 
 242              	.LVL28:
  44:src/main.cpp  **** 
  45:src/main.cpp  ****     return 0;
 243              		.loc 1 45 5 is_stmt 1
  46:src/main.cpp  **** }
 244              		.loc 1 46 1 is_stmt 0
 245 0178 13050000 		li	a0,0
 246 017c 83308104 		ld	ra,72(sp)
 247              		.cfi_restore 1
 248 0180 03340104 		ld	s0,64(sp)
 249              		.cfi_restore 8
 250              		.cfi_def_cfa 2, 80
 251 0184 83348103 		ld	s1,56(sp)
 252              		.cfi_restore 9
 253              	.LVL29:
 254 0188 03390103 		ld	s2,48(sp)
 255              		.cfi_restore 18
 256 018c 13010105 		addi	sp,sp,80
 257              		.cfi_def_cfa_offset 0
 258 0190 67800000 		jr	ra
 259              		.cfi_endproc
 260              	.LFE33:
 262              	.Letext0:
 263              		.file 4 "src/../h/../lib/hw.h"
 264              		.file 5 "src/../h/syscall_c.hpp"
 265              		.file 6 "src/../h/print.hpp"
GAS LISTING /tmp/cclNUaoZ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cclNUaoZ.s:26     .text:0000000000000000 main
     /tmp/cclNUaoZ.s:30     .text:0000000000000000 .L0 
     /tmp/cclNUaoZ.s:31     .text:0000000000000000 .L0 
     /tmp/cclNUaoZ.s:32     .text:0000000000000004 .L0 
     /tmp/cclNUaoZ.s:37     .text:0000000000000014 .L0 
     /tmp/cclNUaoZ.s:38     .text:0000000000000014 .L0 
     /tmp/cclNUaoZ.s:39     .text:0000000000000014 .L0 
     /tmp/cclNUaoZ.s:40     .text:0000000000000014 .L0 
     /tmp/cclNUaoZ.s:42     .text:0000000000000018 .L0 
     /tmp/cclNUaoZ.s:44     .text:0000000000000018 .L0 
     /tmp/cclNUaoZ.s:45     .text:0000000000000018 .L0 
     /tmp/cclNUaoZ.s:51     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:122    .text:0000000000000020 .L0 
     /tmp/cclNUaoZ.s:61     .text:0000000000000024 .L0 
     /tmp/cclNUaoZ.s:62     .text:0000000000000024 .L0 
     /tmp/cclNUaoZ.s:63     .text:0000000000000024 .L0 
     /tmp/cclNUaoZ.s:69     .text:0000000000000038 .L0 
     /tmp/cclNUaoZ.s:70     .text:0000000000000038 .L0 
     /tmp/cclNUaoZ.s:74     .text:0000000000000048 .L0 
     /tmp/cclNUaoZ.s:75     .text:0000000000000048 .L0 
     /tmp/cclNUaoZ.s:81     .text:0000000000000060 .L0 
     /tmp/cclNUaoZ.s:82     .text:0000000000000060 .L0 
     /tmp/cclNUaoZ.s:86     .text:0000000000000070 .L0 
     /tmp/cclNUaoZ.s:87     .text:0000000000000070 .L0 
     /tmp/cclNUaoZ.s:93     .text:0000000000000088 .L0 
     /tmp/cclNUaoZ.s:94     .text:0000000000000088 .L0 
     /tmp/cclNUaoZ.s:98     .text:0000000000000098 .L0 
     /tmp/cclNUaoZ.s:99     .text:0000000000000098 .L0 
     /tmp/cclNUaoZ.s:105    .text:00000000000000b0 .L0 
     /tmp/cclNUaoZ.s:106    .text:00000000000000b0 .L0 
     /tmp/cclNUaoZ.s:110    .text:00000000000000c0 .L0 
     /tmp/cclNUaoZ.s:111    .text:00000000000000c0 .L0 
     /tmp/cclNUaoZ.s:117    .text:00000000000000d8 .L0 
     /tmp/cclNUaoZ.s:118    .text:00000000000000d8 .L0 
     /tmp/cclNUaoZ.s:124    .text:00000000000000e8 .L0 
     /tmp/cclNUaoZ.s:125    .text:00000000000000e8 .L0 
     /tmp/cclNUaoZ.s:126    .text:00000000000000e8 .L0 
     /tmp/cclNUaoZ.s:133    .text:00000000000000f0 .L0 
     /tmp/cclNUaoZ.s:139    .text:00000000000000f4 .L0 
     /tmp/cclNUaoZ.s:140    .text:00000000000000f4 .L0 
     /tmp/cclNUaoZ.s:144    .text:00000000000000fc .L0 
     /tmp/cclNUaoZ.s:145    .text:00000000000000fc .L0 
     /tmp/cclNUaoZ.s:146    .text:00000000000000fc .L0 
     /tmp/cclNUaoZ.s:152    .text:0000000000000100 .L0 
     /tmp/cclNUaoZ.s:153    .text:0000000000000100 .L0 
     /tmp/cclNUaoZ.s:158    .text:0000000000000104 .L0 
     /tmp/cclNUaoZ.s:160    .text:0000000000000108 .L0 
     /tmp/cclNUaoZ.s:165    .text:000000000000010c .L0 
     /tmp/cclNUaoZ.s:166    .text:000000000000010c .L0 
     /tmp/cclNUaoZ.s:171    .text:0000000000000110 .L0 
     /tmp/cclNUaoZ.s:173    .text:0000000000000114 .L0 
     /tmp/cclNUaoZ.s:178    .text:0000000000000118 .L0 
     /tmp/cclNUaoZ.s:179    .text:0000000000000118 .L0 
     /tmp/cclNUaoZ.s:184    .text:000000000000011c .L0 
     /tmp/cclNUaoZ.s:186    .text:0000000000000120 .L0 
GAS LISTING /tmp/cclNUaoZ.s 			page 12


     /tmp/cclNUaoZ.s:191    .text:0000000000000124 .L0 
     /tmp/cclNUaoZ.s:192    .text:0000000000000124 .L0 
     /tmp/cclNUaoZ.s:197    .text:0000000000000128 .L0 
     /tmp/cclNUaoZ.s:204    .text:0000000000000134 .L0 
     /tmp/cclNUaoZ.s:209    .text:0000000000000140 .L0 
     /tmp/cclNUaoZ.s:213    .text:0000000000000144 .L0 
     /tmp/cclNUaoZ.s:217    .text:000000000000014c .L0 
     /tmp/cclNUaoZ.s:218    .text:000000000000014c .L0 
     /tmp/cclNUaoZ.s:220    .text:0000000000000150 .L0 
     /tmp/cclNUaoZ.s:225    .text:0000000000000154 .L0 
     /tmp/cclNUaoZ.s:226    .text:0000000000000154 .L0 
     /tmp/cclNUaoZ.s:228    .text:0000000000000158 .L0 
     /tmp/cclNUaoZ.s:230    .text:000000000000015c .L0 
     /tmp/cclNUaoZ.s:239    .text:0000000000000168 .L0 
     /tmp/cclNUaoZ.s:240    .text:0000000000000168 .L0 
     /tmp/cclNUaoZ.s:244    .text:0000000000000178 .L0 
     /tmp/cclNUaoZ.s:245    .text:0000000000000178 .L0 
     /tmp/cclNUaoZ.s:247    .text:0000000000000180 .L0 
     /tmp/cclNUaoZ.s:249    .text:0000000000000184 .L0 
     /tmp/cclNUaoZ.s:250    .text:0000000000000184 .L0 
     /tmp/cclNUaoZ.s:252    .text:0000000000000188 .L0 
     /tmp/cclNUaoZ.s:255    .text:000000000000018c .L0 
     /tmp/cclNUaoZ.s:257    .text:0000000000000190 .L0 
     /tmp/cclNUaoZ.s:259    .text:0000000000000194 .L0 
     /tmp/cclNUaoZ.s:266    .text:0000000000000194 .L0 
     /tmp/cclNUaoZ.s:45     .text:0000000000000018 .L0 
     /tmp/cclNUaoZ.s:71     .text:000000000000003c .L0 
     /tmp/cclNUaoZ.s:76     .text:000000000000004c .L0 
     /tmp/cclNUaoZ.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cclNUaoZ.s:82     .text:0000000000000060 .L0 
     /tmp/cclNUaoZ.s:88     .text:0000000000000074 .L0 
     /tmp/cclNUaoZ.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cclNUaoZ.s:94     .text:0000000000000088 .L0 
     /tmp/cclNUaoZ.s:100    .text:000000000000009c .L0 
     /tmp/cclNUaoZ.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/cclNUaoZ.s:106    .text:00000000000000b0 .L0 
     /tmp/cclNUaoZ.s:112    .text:00000000000000c4 .L0 
     /tmp/cclNUaoZ.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/cclNUaoZ.s:118    .text:00000000000000d8 .L0 
     /tmp/cclNUaoZ.s:20     .rodata.str1.8:0000000000000060 .LC4
     /tmp/cclNUaoZ.s:240    .text:0000000000000168 .L0 
     /tmp/cclNUaoZ.s:142    .text:00000000000000fc .L4
     /tmp/cclNUaoZ.s:135    .text:00000000000000f4 .L2
     /tmp/cclNUaoZ.s:211    .text:0000000000000144 .L3
     /tmp/cclNUaoZ.s:234    .text:0000000000000168 .L5
     /tmp/cclNUaoZ.s:207    .text:0000000000000140 .L6
     /tmp/cclNUaoZ.s:201    .text:0000000000000134 .L7
     /tmp/cclNUaoZ.s:1261   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cclNUaoZ.s:2442   .debug_str:00000000000005fe .LASF106
     /tmp/cclNUaoZ.s:2340   .debug_str:0000000000000308 .LASF107
     /tmp/cclNUaoZ.s:2300   .debug_str:00000000000001c6 .LASF108
     /tmp/cclNUaoZ.s:5      .text:0000000000000000 .Ltext0
     /tmp/cclNUaoZ.s:262    .text:0000000000000194 .Letext0
     /tmp/cclNUaoZ.s:2230   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cclNUaoZ.s:2368   .debug_str:00000000000003c6 .LASF0
     /tmp/cclNUaoZ.s:2382   .debug_str:000000000000041a .LASF1
     /tmp/cclNUaoZ.s:2354   .debug_str:000000000000035e .LASF2
GAS LISTING /tmp/cclNUaoZ.s 			page 13


     /tmp/cclNUaoZ.s:2280   .debug_str:0000000000000154 .LASF3
     /tmp/cclNUaoZ.s:2326   .debug_str:00000000000002c0 .LASF4
     /tmp/cclNUaoZ.s:2420   .debug_str:0000000000000548 .LASF5
     /tmp/cclNUaoZ.s:2252   .debug_str:000000000000007b .LASF6
     /tmp/cclNUaoZ.s:2386   .debug_str:000000000000044e .LASF7
     /tmp/cclNUaoZ.s:2366   .debug_str:00000000000003b3 .LASF8
     /tmp/cclNUaoZ.s:2446   .debug_str:00000000000006d1 .LASF9
     /tmp/cclNUaoZ.s:2314   .debug_str:0000000000000239 .LASF10
     /tmp/cclNUaoZ.s:2400   .debug_str:00000000000004c3 .LASF11
     /tmp/cclNUaoZ.s:2444   .debug_str:00000000000006c2 .LASF12
     /tmp/cclNUaoZ.s:2256   .debug_str:000000000000008e .LASF13
     /tmp/cclNUaoZ.s:2236   .debug_str:000000000000001e .LASF14
     /tmp/cclNUaoZ.s:2264   .debug_str:00000000000000d8 .LASF15
     /tmp/cclNUaoZ.s:2412   .debug_str:000000000000050d .LASF16
     /tmp/cclNUaoZ.s:2274   .debug_str:000000000000011b .LASF17
     /tmp/cclNUaoZ.s:2242   .debug_str:0000000000000043 .LASF109
     /tmp/cclNUaoZ.s:2286   .debug_str:000000000000017c .LASF18
     /tmp/cclNUaoZ.s:2406   .debug_str:00000000000004f1 .LASF20
     /tmp/cclNUaoZ.s:2388   .debug_str:0000000000000461 .LASF22
     /tmp/cclNUaoZ.s:2312   .debug_str:0000000000000222 .LASF24
     /tmp/cclNUaoZ.s:2356   .debug_str:000000000000036c .LASF19
     /tmp/cclNUaoZ.s:2322   .debug_str:0000000000000281 .LASF21
     /tmp/cclNUaoZ.s:2348   .debug_str:000000000000033c .LASF23
     /tmp/cclNUaoZ.s:2250   .debug_str:0000000000000062 .LASF25
     /tmp/cclNUaoZ.s:2338   .debug_str:00000000000002fb .LASF26
     /tmp/cclNUaoZ.s:2380   .debug_str:00000000000003fa .LASF27
     /tmp/cclNUaoZ.s:2408   .debug_str:00000000000004fd .LASF110
     /tmp/cclNUaoZ.s:2414   .debug_str:0000000000000523 .LASF44
     /tmp/cclNUaoZ.s:2362   .debug_str:000000000000038e .LASF46
     /tmp/cclNUaoZ.s:2290   .debug_str:000000000000018a .LASF111
     /tmp/cclNUaoZ.s:2364   .debug_str:000000000000039e .LASF112
     /tmp/cclNUaoZ.s:2332   .debug_str:00000000000002e3 .LASF28
     /tmp/cclNUaoZ.s:2266   .debug_str:00000000000000e4 .LASF29
     /tmp/cclNUaoZ.s:2336   .debug_str:00000000000002f3 .LASF30
     /tmp/cclNUaoZ.s:2376   .debug_str:00000000000003ea .LASF31
     /tmp/cclNUaoZ.s:2330   .debug_str:00000000000002da .LASF32
     /tmp/cclNUaoZ.s:2350   .debug_str:0000000000000349 .LASF33
     /tmp/cclNUaoZ.s:2318   .debug_str:000000000000025d .LASF35
     /tmp/cclNUaoZ.s:2450   .debug_str:00000000000006f6 .LASF113
     /tmp/cclNUaoZ.s:2324   .debug_str:0000000000000298 .LASF114
     /tmp/cclNUaoZ.s:2372   .debug_str:00000000000003da .LASF34
     /tmp/cclNUaoZ.s:2296   .debug_str:00000000000001ae .LASF36
     /tmp/cclNUaoZ.s:2422   .debug_str:000000000000055a .LASF115
     /tmp/cclNUaoZ.s:2344   .debug_str:000000000000031f .LASF37
     /tmp/cclNUaoZ.s:2320   .debug_str:0000000000000276 .LASF38
     /tmp/cclNUaoZ.s:2298   .debug_str:00000000000001c1 .LASF39
     /tmp/cclNUaoZ.s:2378   .debug_str:00000000000003f4 .LASF40
     /tmp/cclNUaoZ.s:2278   .debug_str:0000000000000145 .LASF116
     /tmp/cclNUaoZ.s:2272   .debug_str:000000000000010f .LASF41
     /tmp/cclNUaoZ.s:2454   .debug_str:0000000000000710 .LASF42
     /tmp/cclNUaoZ.s:2254   .debug_str:0000000000000082 .LASF43
     /tmp/cclNUaoZ.s:2410   .debug_str:0000000000000502 .LASF45
     /tmp/cclNUaoZ.s:2460   .debug_str:0000000000000735 .LASF47
     /tmp/cclNUaoZ.s:2238   .debug_str:000000000000002e .LASF49
     /tmp/cclNUaoZ.s:2432   .debug_str:00000000000005a5 .LASF51
     /tmp/cclNUaoZ.s:2288   .debug_str:0000000000000181 .LASF48
     /tmp/cclNUaoZ.s:2270   .debug_str:00000000000000fa .LASF54
GAS LISTING /tmp/cclNUaoZ.s 			page 14


     /tmp/cclNUaoZ.s:2424   .debug_str:000000000000056b .LASF50
     /tmp/cclNUaoZ.s:2404   .debug_str:00000000000004de .LASF52
     /tmp/cclNUaoZ.s:2440   .debug_str:00000000000005f7 .LASF53
     /tmp/cclNUaoZ.s:2436   .debug_str:00000000000005d2 .LASF55
     /tmp/cclNUaoZ.s:2306   .debug_str:000000000000020c .LASF56
     /tmp/cclNUaoZ.s:2276   .debug_str:0000000000000131 .LASF57
     /tmp/cclNUaoZ.s:2232   .debug_str:0000000000000000 .LASF58
     /tmp/cclNUaoZ.s:2426   .debug_str:0000000000000572 .LASF59
     /tmp/cclNUaoZ.s:2292   .debug_str:0000000000000192 .LASF60
     /tmp/cclNUaoZ.s:2258   .debug_str:000000000000009e .LASF61
     /tmp/cclNUaoZ.s:2464   .debug_str:0000000000000758 .LASF62
     /tmp/cclNUaoZ.s:2294   .debug_str:000000000000019a .LASF63
     /tmp/cclNUaoZ.s:2370   .debug_str:00000000000003d3 .LASF64
     /tmp/cclNUaoZ.s:2456   .debug_str:000000000000071d .LASF65
     /tmp/cclNUaoZ.s:2248   .debug_str:000000000000005b .LASF66
     /tmp/cclNUaoZ.s:2304   .debug_str:00000000000001f9 .LASF67
     /tmp/cclNUaoZ.s:2310   .debug_str:000000000000021c .LASF68
     /tmp/cclNUaoZ.s:2438   .debug_str:00000000000005e5 .LASF69
     /tmp/cclNUaoZ.s:2246   .debug_str:0000000000000055 .LASF70
     /tmp/cclNUaoZ.s:2468   .debug_str:0000000000000765 .LASF71
     /tmp/cclNUaoZ.s:2462   .debug_str:000000000000074d .LASF72
     /tmp/cclNUaoZ.s:2416   .debug_str:0000000000000529 .LASF73
     /tmp/cclNUaoZ.s:2334   .debug_str:00000000000002e8 .LASF74
     /tmp/cclNUaoZ.s:2434   .debug_str:00000000000005ba .LASF75
     /tmp/cclNUaoZ.s:2262   .debug_str:00000000000000ce .LASF76
     /tmp/cclNUaoZ.s:2396   .debug_str:0000000000000499 .LASF77
     /tmp/cclNUaoZ.s:2360   .debug_str:0000000000000384 .LASF78
     /tmp/cclNUaoZ.s:2316   .debug_str:0000000000000247 .LASF79
     /tmp/cclNUaoZ.s:2428   .debug_str:0000000000000586 .LASF80
     /tmp/cclNUaoZ.s:2260   .debug_str:00000000000000b2 .LASF81
     /tmp/cclNUaoZ.s:2448   .debug_str:00000000000006e1 .LASF82
     /tmp/cclNUaoZ.s:2390   .debug_str:000000000000046c .LASF83
     /tmp/cclNUaoZ.s:2398   .debug_str:00000000000004af .LASF84
     /tmp/cclNUaoZ.s:2346   .debug_str:000000000000032a .LASF85
     /tmp/cclNUaoZ.s:2234   .debug_str:0000000000000008 .LASF86
     /tmp/cclNUaoZ.s:2394   .debug_str:0000000000000494 .LASF87
     /tmp/cclNUaoZ.s:27     .text:0000000000000000 .LFB33
     /tmp/cclNUaoZ.s:260    .text:0000000000000194 .LFE33
     /tmp/cclNUaoZ.s:2308   .debug_str:0000000000000214 .LASF88
     /tmp/cclNUaoZ.s:202    .text:0000000000000134 .LBB30
     /tmp/cclNUaoZ.s:237    .text:0000000000000168 .LBE30
     /tmp/cclNUaoZ.s:2374   .debug_str:00000000000003e3 .LASF89
     /tmp/cclNUaoZ.s:2156   .debug_loc:0000000000000000 .LLST5
     /tmp/cclNUaoZ.s:2452   .debug_str:0000000000000704 .LASF90
     /tmp/cclNUaoZ.s:2402   .debug_str:00000000000004d2 .LASF117
     /tmp/cclNUaoZ.s:2167   .debug_loc:0000000000000036 .LLST6
     /tmp/cclNUaoZ.s:2342   .debug_str:0000000000000315 .LASF91
     /tmp/cclNUaoZ.s:222    .text:0000000000000154 .LBB31
     /tmp/cclNUaoZ.s:236    .text:0000000000000168 .LBE31
     /tmp/cclNUaoZ.s:2174   .debug_loc:0000000000000059 .LLST7
     /tmp/cclNUaoZ.s:231    .text:0000000000000164 .LVL26
     /tmp/cclNUaoZ.s:206    .text:0000000000000140 .LVL22
     /tmp/cclNUaoZ.s:47     .text:0000000000000020 .LBB18
     /tmp/cclNUaoZ.s:59     .text:0000000000000024 .LBE18
     /tmp/cclNUaoZ.s:122    .text:00000000000000e8 .LBB20
     /tmp/cclNUaoZ.s:137    .text:00000000000000f4 .LBE20
     /tmp/cclNUaoZ.s:2181   .debug_loc:000000000000007c .LLST0
GAS LISTING /tmp/cclNUaoZ.s 			page 15


     /tmp/cclNUaoZ.s:148    .text:0000000000000100 .LBB22
     /tmp/cclNUaoZ.s:156    .text:0000000000000104 .LBE22
     /tmp/cclNUaoZ.s:2189   .debug_loc:00000000000000a0 .LLST1
     /tmp/cclNUaoZ.s:162    .text:000000000000010c .LBB24
     /tmp/cclNUaoZ.s:169    .text:0000000000000110 .LBE24
     /tmp/cclNUaoZ.s:2196   .debug_loc:00000000000000c3 .LLST2
     /tmp/cclNUaoZ.s:175    .text:0000000000000118 .LBB26
     /tmp/cclNUaoZ.s:182    .text:000000000000011c .LBE26
     /tmp/cclNUaoZ.s:2203   .debug_loc:00000000000000e6 .LLST3
     /tmp/cclNUaoZ.s:188    .text:0000000000000124 .LBB28
     /tmp/cclNUaoZ.s:195    .text:0000000000000128 .LBE28
     /tmp/cclNUaoZ.s:2210   .debug_loc:0000000000000109 .LLST4
     /tmp/cclNUaoZ.s:67     .text:0000000000000038 .LVL2
     /tmp/cclNUaoZ.s:79     .text:0000000000000060 .LVL3
     /tmp/cclNUaoZ.s:84     .text:0000000000000070 .LVL4
     /tmp/cclNUaoZ.s:91     .text:0000000000000088 .LVL5
     /tmp/cclNUaoZ.s:96     .text:0000000000000098 .LVL6
     /tmp/cclNUaoZ.s:103    .text:00000000000000b0 .LVL7
     /tmp/cclNUaoZ.s:108    .text:00000000000000c0 .LVL8
     /tmp/cclNUaoZ.s:115    .text:00000000000000d8 .LVL9
     /tmp/cclNUaoZ.s:120    .text:00000000000000e8 .LVL10
     /tmp/cclNUaoZ.s:141    .text:00000000000000fc .LVL12
     /tmp/cclNUaoZ.s:242    .text:0000000000000178 .LVL28
     /tmp/cclNUaoZ.s:2466   .debug_str:0000000000000760 .LASF92
     /tmp/cclNUaoZ.s:2392   .debug_str:000000000000048e .LASF93
     /tmp/cclNUaoZ.s:2458   .debug_str:0000000000000730 .LASF94
     /tmp/cclNUaoZ.s:2244   .debug_str:000000000000004b .LASF95
     /tmp/cclNUaoZ.s:2358   .debug_str:0000000000000378 .LASF118
     /tmp/cclNUaoZ.s:2418   .debug_str:0000000000000541 .LASF96
     /tmp/cclNUaoZ.s:2328   .debug_str:00000000000002c7 .LASF98
     /tmp/cclNUaoZ.s:2352   .debug_str:0000000000000357 .LASF97
     /tmp/cclNUaoZ.s:2430   .debug_str:0000000000000595 .LASF99
     /tmp/cclNUaoZ.s:2384   .debug_str:000000000000042d .LASF100
     /tmp/cclNUaoZ.s:2284   .debug_str:000000000000016e .LASF102
     /tmp/cclNUaoZ.s:2282   .debug_str:000000000000015b .LASF101
     /tmp/cclNUaoZ.s:2240   .debug_str:0000000000000037 .LASF103
     /tmp/cclNUaoZ.s:2302   .debug_str:00000000000001e4 .LASF104
     /tmp/cclNUaoZ.s:2268   .debug_str:00000000000000ea .LASF105
     /tmp/cclNUaoZ.s:200    .text:0000000000000134 .LVL21
     /tmp/cclNUaoZ.s:210    .text:0000000000000144 .LVL23
     /tmp/cclNUaoZ.s:215    .text:000000000000014c .LVL24
     /tmp/cclNUaoZ.s:233    .text:0000000000000168 .LVL27
     /tmp/cclNUaoZ.s:253    .text:0000000000000188 .LVL29
     /tmp/cclNUaoZ.s:221    .text:0000000000000154 .LVL25
     /tmp/cclNUaoZ.s:134    .text:00000000000000f4 .LVL11
     /tmp/cclNUaoZ.s:147    .text:0000000000000100 .LVL13
     /tmp/cclNUaoZ.s:154    .text:0000000000000104 .LVL14
     /tmp/cclNUaoZ.s:161    .text:000000000000010c .LVL15
     /tmp/cclNUaoZ.s:167    .text:0000000000000110 .LVL16
     /tmp/cclNUaoZ.s:174    .text:0000000000000118 .LVL17
     /tmp/cclNUaoZ.s:180    .text:000000000000011c .LVL18
     /tmp/cclNUaoZ.s:187    .text:0000000000000124 .LVL19
     /tmp/cclNUaoZ.s:193    .text:0000000000000128 .LVL20
     /tmp/cclNUaoZ.s:267    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
GAS LISTING /tmp/cclNUaoZ.s 			page 16


_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z11workerBodyAv
_Z11printStringPKc
_Z11workerBodyBv
_Z11workerBodyCv
_Z11workerBodyDv
_Z15thread_dispatchv
_ZdlPv
_ZdaPv
